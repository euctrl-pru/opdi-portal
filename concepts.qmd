---
title: "Concepts"
filters:
  - acronyms
acronyms:
  loa_title: "List of Acronyms"
  include_unused: false
  insert_loa: "end"
  insert_links: true
  id_prefix: "acronyms_"
  sorting: "alphabetical"
  non_existing: "key"
  style: "long-short"
  fromfile:
    - media/acronyms.yml
---

To monitor performance of a flight, trajectories must be identified and broken down into discrete events represent key milestones in the flight to allow for statistical analysis. These flight events or milestones represent the location and time of occurrence of the event (e.g., a flight level crossing). In case of a longer event duration (e.g., a level segment), the start and end of this flight phase are captured in two separate events. Associated to each flight event one can assign values to indicate measurements such as flown distance or emitted CO₂. 

::: columns
::: {.column width="80%"}

Any statistical performance analysis on flight data thus starts with identifying these events in flight trajectories. To promote performance analysis on publicly available flight trajectory data, the Open Performance Data Initiative constructed a flight list, a flight event table and an associated measurements table. 

Currently these tables are based on ADS-B trajectory data from [OpenSky Network](https://opensky-network.org/) (OSN). They are made freely available to support open source performance analysis on publicly available data. Later releases of the data sets will include validations and corrections using data from other trajectory sources where possible.

:::

::: {.column width="20%"}

![](media/opensky-network-logo.jpg)

:::
:::

## Flight List

A **flight list** contains basic information about each trajectory. It captures the aerodrome of departure (`ADEP`) where it is first seen (`first_seen`) usually at the off-block time and the aerodrome of destination (`ADES`) where it last seen (`last_seen`) before in-block time. The flight is usually identified by an `id` or its' `callsign` and `icao24`. The date of flight (`DOF`) indicates the date on which is is first seen.

This flight list is constructed to give a general overview of the flights which happen each day. 

## Flight Events and Phases

As mentioned, in a flight we can identify _events_ that can help to monitor its evolution from a gate-to-gate
perspective. A **flight event** or milestone is conceptually defined by

* The flight trajectory `id` it belongs to.
* The 3D location: 
  * `longitude` and `latitude` (in [WSG84](https://en.wikipedia.org/wiki/World_Geodetic_System)),
  * `altitude` (in feet), e.g., `32000 ft`.
* The `event_time` when the event took place (UTC). E.g., `2021-09-27 10:43:11.234 UTC`.
* The event `type`, i.e. `top-of-climb` or `off-block`.
* The `source` indicates the origin of the flight trajectory used to determine the event (e.g., `OSN`).
* The `version` indicates the algorithm version used to detect the flight event. For more info, see [Methodology](https://www.opdi.aero/methodology).
* Additional `info` is captured at last. This can be contextual information, i.e. `F33R` as the relevant parking position for an `off-block` milestone or `26` as the runway ID for a `take-off` milestone.

A **Flight phase** is a prolonged event which can be broken down into a _start event_ and an _end event_ of the phase. @fig-flight-phases shows a simplified diagram of a possible set of **flight phases** (white square boxes) and relevant **flight events** (`Txy` labels). 

![Flight phases and events.](media/flight_states.png){#fig-flight-phases width="100%"}

In general we are interested in analyzing performance at gate-to-gate level so
as to cover both the airborne and the ground phases of flights. To this extent
we summarize a flight down to some of its fundamental flight events as in the
following list (from departure to arrival):

(@) Off-block (**T06**)
(@) End of push back (**T07**)
(@) Enter runway for take-off (**T09**)
(@) Lift-off (**T12**), a.k.a. take-off
(@) 40-nautical-miles intersection (**T14**)
(@) Top-of-climb (**T15**)
(@) Top-of-descent (**T18**)
(@) 40-nautical-miles intersection (**T19**)
(@) Touch-down (**T22**)
(@) Runway vacated (**T24**)
(@) Enter parking spot (**T26**)
(@) On-block (**T27**)

Other interesting flight events are:

(@) Holding start
(@) Holding end
(@) Leveled segment start
(@) Leveled segment end
(@) Flight Information Region (FIR) crossing

**Subsets of flight events** allow for the monitoring of **performance of flight events and phases**. Examples hereof are:

* Taxi-in (`T24`, `T27`) time and taxi-out (`T06`, `T09`) times for the taxi phase.
* Runway utilization and sequencing (`T12`, `T22`).
* Inefficiencies in the \acr{TMA} (via holding patterns and leveled portions of the descent).
* ...

Additional ad-hoc milestones can be defined for specific needs. For example \acr{FIR} crossing
flight events could be useful to count \acr{DAIO} statistics.

## Measurements

If one has the flight events, it would be helpful to see associated values to each flight event. An example of this would be the flown distance until this flight event or the emitted CO₂. 

## Use Cases

An event-based representation of a flight is a way to reduce complexity
for its representation and allow statistical analysis for performance monitoring. 

One of the use cases could be to monitor the [ICAO Global Air Navigation Plan (GANP) KPIs](https://www4.icao.int/ganpportal/ASBU/KPI) using events extracted from the publicly available ADS-B trajectories. Not all data necessary for  some indicators can be extracted from ADS-B trajectories. An example hereof would be scheduled off-block times. 


![Milestones and their use.](media/milestones-usage.png)

### Fuel consumption / Environmental emissions

Environmental emissions and climate impact are indicators more and more in news headlines and
on the political agendas.
With a milestone-based representation of a flight we can *segment* the phases of interest
and calculated the relevant cumulative emissions.

For example we can split a flight in the following phases:

* cruise
* \acr{LTO} cycle

and calculate the fuel-burnt emissions by further splitting them.

![LTO phases ([@doi/10.2822/385503] Figure 2.5).](media/lto-cycle_eea.png)

For LTO we have four sub-phases:

* approach
* taxi-in
* taxi-out
* take-off
* climb-out

For example taxi-out sub-phase can be framed by the ground portion from `off-block` to
`rwy-entry` milestones which with defined assumptions in term of aircraft & engine type,
full thrust percentage and number of engines in use can be handled to an emission calculator
to compute CO2, NOx, ... emissions.

The selection of milestones to model the flight and the further assumptions of how the aircraft
is operated between those milestones will produce results with different levels of
[accuracy and precision](https://en.wikipedia.org/wiki/Accuracy_and_precision).


**NOTE**: add ER diagram for use case

### Operational performance


A milestone-based modelling of a flight provides practical ways to extract operational
indicators for the analysis of the operation performance at network, state, airport or
airline level.

For example using the `touch-down` (**T22** in @fig-flight-phases) with the contextual information
we can calculate RWY utilization at each airport or inter-arrival times, etc.


### Airspace profile

**TODO**: milestones line FIR crossing (`x-fir`) could be used to extract an flight airspace profile.
For example we could have AUA crossing (`x-aua`) or even elementary airspace (`x-esa`) ones.
The tricky thing is obviously having a non-overlapping airspaces (of the same type)
