---
title: "Methodology"
---

The various methodologies used to extract **flight lists**, **flight events** and **measurements** from trajectory state vectors.

## Flight List

To construct the flight list the trajectory needs to be identified from the state vectors. In addition, one needs to assign the aerodromes of departure (`ADEP`) and destination (`ADES`). Based on the state vector source, the trajectory might already contain an identifier `id` and an `ADEP` and `ADES`. The various subsequent algorithms are considered iterative improvements.

| Version | Improvements                                      | Release date | Methodology        |
|-------------------|--------------------------------------------------|--------------|--------------------|
| v0.0.1| Initial flight, ADEP and ADES identification algorithm. | 1 November 2023 | [Link](https://www.opdi.aero/methodology#flight-list-methodology) |

#### Flight List Methodology 

::: {.callout-note icon=false collapse=true}

### Flight List v0.0.1 

**Object**: Flight list

**Version tag**: `flight_list_v0.0.1`

**Data source(s)**: OpenSky Network (OSN)

**Flight identification algorithm(s):**

Given the OpenSky Network state vectors, identifiers or `id`s are assigned in monthly batches. The statevectors are grouped per `icao24` and `callsign` value. Each group is subsequently split and assigned a `splitnumber` if it is detected that there is a gap in between subsequent state vectors larger than 30 minutes or if there is a gap of 10 minutes whilst the altitude is below 1km. 

The resulting trajectories are given `id`s which consist of the SHA256 value of the `icao24` and `callsign` followed by the `splitnumber` and the `year` and `month` of the `event_time`. This is done to ensure uniqueness of the `id`.

**ADEP/ADES identification algorithm(s):**

To approximate the aerodrome of departure (`ADEP`) or destination (`ADES`) of a departing or arriving flight, coordinate grids are calculated for each airport with a radius of 10km and a latitude/longitude step of 0.0001 degrees. For each point in the circular grid surrounding the airport, the distance to the aerodrome reference point (ARP) is calculated. 

The trajectories identified in the previous step are filtered to only retain state vectors with an altitude lower than 10,000 ft. Onto the latitude and longitude (rounded to 0.0001 degrees) of the remaining state vectors the airport coordinate grids are superimposed. Each state vector in the resulting data sets now indicates the various aerodromes the coordinates overlap with. If there are multiple aerodromes available, the minimal initial/final distance to the aerodrome indicates the most likely aerodrome of departure (`ADEP`) or destination (`ADES`).     

:::


## Flight Events

The flight events are extracted from the identified trajectories using different methods for the different `type`s of flight events. 

| Version | Improvements                                      | Release date | Methodology        |
|-------------------|--------------------------------------------------|--------------|--------------------|
| v0.0.1| Initial flight event extraction algorithm. | 1 November 2023 | [Link](https://www.opdi.aero/methodology#flight-event-methodology) |


#### Flight Events Methodology 

::: {.callout-note icon=false collapse=true}

### Flight Events v0.0.1 

**Object**: Flight Events

**Version tag**: `flight_events_v0.0.1`

**Data source(s)**: OpenSky Network (OSN)

**Flight event type(s)**:

Currently the following flight event types are extracted:

| Event type            | Description                                                                 |
|------------------------------|-------------------------------------------------------------------------|
| `Start of Level Segment #`    | The start of the numbered # level segment.                                         |
| `End of Level Segment #`       | The end of the numbered # level segment.                                           |
| `TOD`                          | The top-of-descent.                                                     |
| `TOC`                          | The top-of-climb.                                                       |
| `Take-Off`                     | The take-off.                                                           |
| `Landing`                      | The landing.                                                            |
| `First Crossing FL50/70/100/245`         | The first crossing of the flight level (FL) 50/70/100/245 during flight.|
| `Last Crossing FL50/70/100/245`          | The last crossing of the flight level (FL) 50/70/100/245 during flight. |


**Flight event algorithm(s):**

*Phase derivations*

Using [OpenAP - The Open Model for Aircraft Performance and Emissions](https://openap.dev/) by [Dr. Junzi Sun](https://junzis.com/) of the TU Delft, the state vectors of each flight were assessed and classified into various phases (`GR` = Ground phase, `LVL` = Level segment phase, `CR` = Cruise phase, `DE` = Descent phase, `CL` = Climb phase). Using this the events are identified in each flight as follows:

* `Start of Level Segment #`: The first state vector in each numbered # level segment phase (`LVL`). 
* `End of Level Segment #`: The last state vector in each numbered # level segment phase (`LVL`).
* `TOC`: The first state vector of the first cruise phase (`CR`). 
* `TOD`: The last state vector of the last cruise phase (`CR`). 
* `Take-Off`: The first state vector of the climb phase (`CL`) after a ground phase (`GND`).
* `Landing`: The first state vector of the ground phase (`GND`) after a descent phase (`DE`).


*Crossings*

For each crossing of the respective flight levels (FL50/70/100/245) the algorithm is as follows: 

1. A smooth average flight level is calculated for each state vector.  
2. The flight values are compared between each subsequent state vector. 

The first time it crosses a flight level of interest, the crossing state vector is recorded as a `First Crossing` event. The last time it crosses a flight level of interest, the crossing state vector is recorded as a `Last Crossing` event. 

:::

## Measurements


| Version | Improvements                                      | Release date | Methodology        |
|-------------------|--------------------------------------------------|--------------|--------------------|
| v0.0.1| Initial measurement calculation algorithm. | 1 November 2023 | [Link](https://www.opdi.aero/methodology#measurements-methodology) |

#### Measurement Methodology 

::: {.callout-note icon=false collapse=true}
### Measurements v0.0.1 

**Object**: Measurements

**Version tag**: `measurements_v0.0.1`

**Data source(s)**: OpenSky Network (OSN)

**Measurement type(s)**:

Currently the following measurements are determined:

| Measurement type            | Description                                                                 |
|------------------------------|-------------------------------------------------------------------------|
| `Distance Flown (NM)`    | The cumulative distance flown up until this this event since the aircraft started its' trajectory (at time `first_seen`).                                          |


**Measurement algorithm(s):**

*Distance Flown (NM)*

The `Distance flown (NM)` is calculated between each subsequent state vector using the great circle distance. The unit is nautic miles (NM). This segment distance is then summed cumulatively for each state vector since the first state vector (at time `first_seen`). This determined flown distance in nautic miles is then taken as measurement when identifying a flight event.

:::
