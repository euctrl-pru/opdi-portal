[
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "The data is modeled according to the ER diagram in Section 1.\nThe FLIGHT, EVENT and MEASUREMENT tables are published under the Open Performance Data Initiative (OPDI) in collaboration with the OpenSky Network (OSN). The TRAJECTORY data comes from OSN’s State Vector data.\nThe first data release contains limited flight events from start-date until end-date, further enhancements are planned according to our Roadmap page.\nDownload the data here:"
  },
  {
    "objectID": "data.html#retrieving-data-on-trajectories",
    "href": "data.html#retrieving-data-on-trajectories",
    "title": "Data",
    "section": "Retrieving Data on Trajectories",
    "text": "Retrieving Data on Trajectories\nGiven the FLIGHT table, one can, when the data source is OpenSky Network (OSN) fetch the trajectory from the publicly available OpenSky Network history database if needed. Based on the available icao24 or callsign, first_seen and last_seen one can perform a query to fetch the data.\nThe following tools are available for such queries: https://opensky-network.org/data/data-tools.\n\n\n\n\n\n\nFuture releases (click to open/close)\n\n\n\n\n\nOSN kindly provided State Vector data at 5-sec granularity for a bounding box covering (wider) Europe.\n\n\n\nBounding box for OPDI state vector coverage, SW=[-25.86653, 26.74617] NE=[49.65699, 70.25976]\n\n\nWe intend to make these trajectories available for easy download, see Roadmap page."
  },
  {
    "objectID": "measurement-data.html",
    "href": "measurement-data.html",
    "title": "Download Measurements v0.0.2 Datasets",
    "section": "",
    "text": "Below you will find links to download measurements v0.0.2 data files from January 01, 2022 to April 30, 2025. Each file is in Parquet format, providing a highly efficient way to store and manage large datasets. The datasets are separated into 10-day intervals. Please note that each dataset covers data up to, but not including, the last day listed in its name."
  },
  {
    "objectID": "measurement-data.html#available-datasets",
    "href": "measurement-data.html#available-datasets",
    "title": "Download Measurements v0.0.2 Datasets",
    "section": "Available Datasets",
    "text": "Available Datasets\nEach dataset corresponds to a specific 10-day period and is listed below for easy access.\n\n\n\n\n\n\nAutomated Download\n\n\n\nIf you want to automate your downloads, you can generate the link for downloading using the following format where YYYYMMDD is the start date of the 10-day period: https://www.eurocontrol.int/performance/data/download/OPDI/v002/measurements/measurements_{YYYYMMDD}_{YYYYMMDD_next10}.parquet\nThe first date to start generating intervals for is 1 January 2022. As an example, for January 1, 2022, to January 10, 2022, the link would be:\nhttps://www.eurocontrol.int/performance/data/download/OPDI/v002/measurements/measurements_20220101_20220111.parquet\n\n\n\n2022\n\nJanuary 1 - 10, 2022\nDownload measurements_20220101_20220111.parquet\nJanuary 11 - 20, 2022\nDownload measurements_20220111_20220121.parquet\nJanuary 21 - 30, 2022\nDownload measurements_20220121_20220131.parquet\nJanuary 31 - February 9, 2022\nDownload measurements_20220131_20220210.parquet\nFebruary 10 - 19, 2022\nDownload measurements_20220210_20220220.parquet\nFebruary 20 - March 1, 2022\nDownload measurements_20220220_20220302.parquet\nMarch 2 - 11, 2022\nDownload measurements_20220302_20220312.parquet\nMarch 12 - 21, 2022\nDownload measurements_20220312_20220322.parquet\nMarch 22 - 31, 2022\nDownload measurements_20220322_20220401.parquet\nApril 1 - 10, 2022\nDownload measurements_20220401_20220411.parquet\nApril 11 - 20, 2022\nDownload measurements_20220411_20220421.parquet\nApril 21 - 30, 2022\nDownload measurements_20220421_20220501.parquet\nMay 1 - 10, 2022\nDownload measurements_20220501_20220511.parquet\nMay 11 - 20, 2022\nDownload measurements_20220511_20220521.parquet\nMay 21 - 30, 2022\nDownload measurements_20220521_20220531.parquet\nMay 31 - June 9, 2022\nDownload measurements_20220531_20220610.parquet\nJune 10 - 19, 2022\nDownload measurements_20220610_20220620.parquet\nJune 20 - 29, 2022\nDownload measurements_20220620_20220630.parquet\nJune 30 - July 9, 2022\nDownload measurements_20220630_20220710.parquet\nJuly 10 - 19, 2022\nDownload measurements_20220710_20220720.parquet\nJuly 20 - 29, 2022\nDownload measurements_20220720_20220730.parquet\nJuly 30 - August 8, 2022\nDownload measurements_20220730_20220809.parquet\nAugust 9 - 18, 2022\nDownload measurements_20220809_20220819.parquet\nAugust 19 - 28, 2022\nDownload measurements_20220819_20220829.parquet\nAugust 29 - September 7, 2022\nDownload measurements_20220829_20220908.parquet\nSeptember 8 - 17, 2022\nDownload measurements_20220908_20220918.parquet\nSeptember 18 - 27, 2022\nDownload measurements_20220918_20220928.parquet\nSeptember 28 - October 7, 2022\nDownload measurements_20220928_20221008.parquet\nOctober 8 - 17, 2022\nDownload measurements_20221008_20221018.parquet\nOctober 18 - 27, 2022\nDownload measurements_20221018_20221028.parquet\nOctober 28 - November 6, 2022\nDownload measurements_20221028_20221107.parquet\nNovember 7 - 16, 2022\nDownload measurements_20221107_20221117.parquet\nNovember 17 - 26, 2022\nDownload measurements_20221117_20221127.parquet\nNovember 27 - December 6, 2022\nDownload measurements_20221127_20221207.parquet\nDecember 7 - 16, 2022\nDownload measurements_20221207_20221217.parquet\nDecember 17 - 26, 2022\nDownload measurements_20221217_20221227.parquet\nDecember 27, 2022 - January 5, 2023\nDownload measurements_20221227_20230106.parquet\n\n\n\n2023\n\nJanuary 6 - 15, 2023\nDownload measurements_20230106_20230116.parquet\nJanuary 16 - 25, 2023\nDownload measurements_20230116_20230126.parquet\nJanuary 26 - February 4, 2023\nDownload measurements_20230126_20230205.parquet\nFebruary 5 - 14, 2023\nDownload measurements_20230205_20230215.parquet\nFebruary 15 - 24, 2023\nDownload measurements_20230215_20230225.parquet\nFebruary 25 - March 6, 2023\nDownload measurements_20230225_20230307.parquet\nMarch 7 - 16, 2023\nDownload measurements_20230307_20230317.parquet\nMarch 17 - 26, 2023\nDownload measurements_20230317_20230327.parquet\nMarch 27 - April 5, 2023\nDownload measurements_20230327_20230406.parquet\nApril 6 - 15, 2023\nDownload measurements_20230406_20230416.parquet\nApril 16 - 25, 2023\nDownload measurements_20230416_20230426.parquet\nApril 26 - May 5, 2023\nDownload measurements_20230426_20230506.parquet\nMay 6 - 15, 2023\nDownload measurements_20230506_20230516.parquet\nMay 16 - 25, 2023\nDownload measurements_20230516_20230526.parquet\nMay 26 - June 4, 2023\nDownload measurements_20230526_20230605.parquet\nJune 5 - 14, 2023\nDownload measurements_20230605_20230615.parquet\nJune 15 - 24, 2023\nDownload measurements_20230615_20230625.parquet\nJune 25 - July 4, 2023\nDownload measurements_20230625_20230705.parquet\nJuly 5 - 14, 2023\nDownload measurements_20230705_20230715.parquet\nJuly 15 - 24, 2023\nDownload measurements_20230715_20230725.parquet\nJuly 25 - August 3, 2023\nDownload measurements_20230725_20230804.parquet\nAugust 4 - 13, 2023\nDownload measurements_20230804_20230814.parquet\nAugust 14 - 23, 2023\nDownload measurements_20230814_20230824.parquet\nAugust 24 - September 2, 2023\nDownload measurements_20230824_20230903.parquet\nSeptember 3 - 12, 2023\nDownload measurements_20230903_20230913.parquet\nSeptember 13 - 22, 2023\nDownload measurements_20230913_20230923.parquet\nSeptember 23 - October 2, 2023\nDownload measurements_20230923_20231003.parquet\nOctober 3 - 12, 2023\nDownload measurements_20231003_20231013.parquet\nOctober 13 - 22, 2023\nDownload measurements_20231013_20231023.parquet\nOctober 23 - November 1, 2023\nDownload measurements_20231023_20231102.parquet\nNovember 2 - 11, 2023\nDownload measurements_20231102_20231112.parquet\nNovember 12 - 21, 2023\nDownload measurements_20231112_20231122.parquet\nNovember 22 - December 1, 2023\nDownload measurements_20231122_20231202.parquet\nDecember 2 - 11, 2023\nDownload measurements_20231202_20231212.parquet\nDecember 12 - 21, 2023\nDownload measurements_20231212_20231222.parquet\nDecember 22 - 31, 2023\nDownload measurements_20231222_20240101.parquet\n\n\n\n2024\n\nJanuary 1 - 10, 2024\nDownload measurements_20240101_20240111.parquet\nJanuary 11 - 20, 2024\nDownload measurements_20240111_20240121.parquet\nJanuary 21 - 30, 2024\nDownload measurements_20240121_20240131.parquet\nJanuary 31 - February 9, 2024\nDownload measurements_20240131_20240210.parquet\nFebruary 10 - 19, 2024\nDownload measurements_20240210_20240220.parquet\nFebruary 20 - 29, 2024\nDownload measurements_20240220_20240301.parquet\nMarch 1 - 10, 2024\nDownload measurements_20240301_20240311.parquet\nMarch 11 - 20, 2024\nDownload measurements_20240311_20240321.parquet\nMarch 21 - 30, 2024\nDownload measurements_20240321_20240331.parquet\nMarch 31 - April 9, 2024\nDownload measurements_20240331_20240410.parquet\nApril 10 - 19, 2024\nDownload measurements_20240410_20240420.parquet\nApril 20 - 29, 2024\nDownload measurements_20240420_20240430.parquet\nApril 30 - May 9, 2024\nDownload measurements_20240430_20240510.parquet\nMay 10 - 19, 2024\nDownload measurements_20240510_20240520.parquet\nMay 20 - 29, 2024\nDownload measurements_20240520_20240530.parquet\nMay 30 - June 8, 2024\nDownload measurements_20240530_20240609.parquet\nJune 9 - 18, 2024\nDownload measurements_20240609_20240619.parquet\nJune 19 - 28, 2024\nDownload measurements_20240619_20240629.parquet\nJune 29 - July 8, 2024\nDownload measurements_20240629_20240709.parquet\nJuly 9 - 18, 2024\nDownload measurements_20240709_20240719.parquet\nJuly 19 - 28, 2024\nDownload measurements_20240719_20240729.parquet\nJuly 29 - August 7, 2024\nDownload measurements_20240729_20240808.parquet\nAugust 8 - 17, 2024\nDownload measurements_20240808_20240818.parquet\nAugust 18 - 27, 2024\nDownload measurements_20240818_20240828.parquet\nAugust 28 - September 6, 2024\nDownload measurements_20240828_20240907.parquet\nSeptember 7 - 16, 2024\nDownload measurements_20240907_20240917.parquet\nSeptember 17 - 26, 2024\nDownload measurements_20240917_20240927.parquet\nSeptember 27 - October 6, 2024\nDownload measurements_20240927_20241007.parquet\nOctober 7 - 16, 2024\nDownload measurements_20241007_20241017.parquet\nOctober 17 - 26, 2024\nDownload measurements_20241017_20241027.parquet\nOctober 27 - November 5, 2024\nDownload measurements_20241027_20241106.parquet\nNovember 6 - 15, 2024\nDownload measurements_20241106_20241116.parquet\nNovember 16 - 25, 2024\nDownload measurements_20241116_20241126.parquet\nNovember 26 - November 30, 2024\nDownload measurements_20241126_20241206.parquet\n\n\nWe hope you find these datasets useful for your analysis and research. If you have any questions or require further assistance, please contact us at support@ansperformance.eu."
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Open Performance Data Initiative (OPDI)",
    "section": "Data",
    "text": "Data\nThe flight data made available is published under the Open Performance Data Initiative (OPDI) as sponsored by the Performance Review Commission and in collaboration with the OpenSky Network (OSN).\nDownload the data here."
  },
  {
    "objectID": "index.html#concepts",
    "href": "index.html#concepts",
    "title": "Open Performance Data Initiative (OPDI)",
    "section": "Concepts",
    "text": "Concepts\nTo learn more about the concepts used within the OPDI data tables, see the Concepts."
  },
  {
    "objectID": "index.html#methodology",
    "href": "index.html#methodology",
    "title": "Open Performance Data Initiative (OPDI)",
    "section": "Methodology",
    "text": "Methodology\nThe description of the algorithms used to identify flights, flight events and compute the measurements are described under Methodology."
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Open Performance Data Initiative (OPDI)",
    "section": "About",
    "text": "About\nTo learn more about the initiative, see About."
  },
  {
    "objectID": "concepts.html",
    "href": "concepts.html",
    "title": "Concepts",
    "section": "",
    "text": "For the sake of statistical analysis a flight trajectory can be broken down to a discrete set of EVENTs that represent key milestones useful for a specific study.\nThese events are characterized by a location and a time of occurrence, e.g., in the case of a flight level crossing event the longitude, latitude, altitude and timestamp of where/when it occurs.\nCertain phenomena cannot be modeled by single 4D1 instants, i.e. flown level segment or holding segments. In these cases the EVENT concept can still be used, we can capture the start and the end of this phenomenon as two separate event types and process them as a pair during the analysis.\nThe concept of MEASUREMENT is then used when associating specific metrics to the events of interest. Example of measurements for flight trajectories are (cumulative) flown distance or emitted CO2."
  },
  {
    "objectID": "concepts.html#flight-list",
    "href": "concepts.html#flight-list",
    "title": "Concepts",
    "section": "Flight List",
    "text": "Flight List\nA flight list contains basic information about each trajectory. It captures the Aerodrome of Departure (ADEP) where it is first seen (first_seen) usually at the off-block time and the Aerodrome of Destination (ADES) where it last seen (last_seen) before in-block time. The flight is usually identified by an id or its FLT_ID (i.e., the callsign) and ICAO24. The date of flight (DOF) indicates the date on which is is first seen.\nThis flight list is constructed to give a general overview of the flights which happen each day."
  },
  {
    "objectID": "concepts.html#flight-events-and-phases",
    "href": "concepts.html#flight-events-and-phases",
    "title": "Concepts",
    "section": "Flight Events and Phases",
    "text": "Flight Events and Phases\nAs mentioned, in a flight we can identify events that can help to monitor its evolution from a gate-to-gate perspective. A flight event or milestone is conceptually defined by\n\nThe flight trajectory id it belongs to.\nThe 3D location:\n\nlongitude and latitude (in WSG84),\naltitude (in feet), e.g., 32000 ft.\n\nThe event_time when the event took place (UTC). E.g., 2021-09-27 10:43:11.234 UTC.\nThe event type, i.e. top-of-climb or off-block.\nThe source indicates the origin of the flight trajectory used to determine the event (e.g., OSN).\nThe version indicates the algorithm version used to detect the flight event. For more info, see Methodology.\nAdditional info is captured at last. This can be contextual information, i.e. F33R as the relevant parking position for an off-block milestone or 26 as the Runway (RWY) ID for a take-off milestone.\n\nA Flight phase is a prolonged event which can be broken down into a start event and an end event of the phase. Figure 1 shows a simplified diagram of a possible set of flight phases (white square boxes) and relevant flight events (Txy labels).\n\n\n\n\n\n\nFigure 1: (Simplified) Flight phases and events. For a more complete/complex representation, see Figure 2 in the collapsable block\n\n\n\n\n\n\n\n\n\nFlight phases and events (more complete/complex diagram) (click to open/close)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Flight phases and events, a more complete/complex diagram.\n\n\n\n\n\n\nThe events in Figure 1 are:\n\nT00 = time of maintenance completion\nT01 = time aircraft servicing begins\nT02 = time aircraft loading begins\nT03 = time aircraft is ready for pushback\nT04 = time off-blocks\nT05 = pushback complete - parking position vacated - start taxi\nT06 = start taxi onto take-off runway\nT07 = start take-off roll\nT08 = start rotation\nT09 = positive rate of climb established\nT10 = time aircraft reaches safety altitude and leaves traffic circuit\nT11 = time aircraft enters en-route airspace\nT12 = time of Top of Climb\nT13 = time of Top of Descent\nT14 = aircraft enters terminal airspace and starts approach\nT15 = aircraft established on final approach\nT16 = aircraft over runway threshold\nT17 = time of touchdown\nT18 = time aircraft starts turn-off\nT19 = time runway is vacated\nT20 = aircraft starts manoeuvring into parking position\nT21 = on-blocks\nT22 = time unloading begins\nT23 = unloading completed\nT24 = arrival servicing completed\nT25 = start of maintenance\n\nExamples of usage:\n\nT04–T06 = Taxi-out\nT19–T21 = Taxi-in\nT08–T17 = Airborne time\nT04–T21 = block-to-block time\nT06–T08 = Runway occupancy time (departure)\nT04–T05 = Pushback delay\nT03–T22 = Turnaround time\n\nIn general, we are interested in analyzing performance at gate-to-gate level so as to cover both the airborne and the ground phases of flights. To this extent we summarize a flight down to some of its fundamental flight events as in the following list (from departure to arrival):\n\nOff-block (T04)\nEnd of push back (T05)\nEnter runway for take-off (T06)\nLift-off (T08), a.k.a. take-off\n40-nautical-miles intersection (sort of T11)\nTop-of-climb (T12)\nTop-of-descent (T13)\n40-nautical-miles intersection (sort of T14)\nTouch-down (T17)\nRunway vacated (T19)\nEnter parking spot (T20)\nOn-block (T21)\n\nOther interesting flight events are:\n\nHolding start\nHolding end\nLeveled segment start\nLeveled segment end\nFlight Information Region (FIR) crossing\n\nThese additional ad hoc milestones can be used for specific reports, for example Flight Information Region (FIR) crossings could be useful to count Departure, Arrival, Internal, Overflight (DAIO) statistics."
  },
  {
    "objectID": "concepts.html#measurements",
    "href": "concepts.html#measurements",
    "title": "Concepts",
    "section": "Measurements",
    "text": "Measurements\nOnce the flight EVENTs are available, it is informative to see associated metrics or MEASUREMENTs for each flight event. An example of this is the cumulative distance flown or the (cumulative) CO2 emitted.\nA MEASUREMENT is thus identified by:\n\nA link to the event, by an event_id.\nThe type of measurement (e.g., distance flown (NM) or emitted CO2).\nThe value of the measurement (e.g., 400 NM or 5000 kg).\nThe version indicates the specific algorithm used."
  },
  {
    "objectID": "concepts.html#use-cases",
    "href": "concepts.html#use-cases",
    "title": "Concepts",
    "section": "Use Cases",
    "text": "Use Cases\nAn event-based representation of a flight is a way to reduce complexity for its representation and allow statistical analysis for performance monitoring.\n\nOperational Performance Monitoring\nOne of the possible use cases for an event-based representation of a flight, could be the monitoring of the International Civil Aviation Organization (ICAO) Global Air Navigation Plan (GANP) Key Performance Indicator (KPI)s. Thus operational indicators could be extracted for the analysis of the operations performance at network, state, airport or airline level.\nFor example using the touch-down (T17 in Figure 1) with the contextual information (RWY identification) we can calculate RWY utilization at each airport or inter-arrival times, etc.\n Possible monitoring usages are:\n\nAirport performance (Throughput, RWY utilization, …)\nFuel efficiency & CO2/NOx Emissions\nAirline profiling\nSafety: separation, …\nInfluence/resilience to Meteo events\n\n\n\nFuel Consumption and Environmental Emissions\nEnvironmental emissions and climate impact are indicators more and more in news headlines and on the political agendas. With a event-based representation of a flight we can segment the phases of interest and calculated the relevant cumulative emissions.\nFor example we can split a flight in the following phases:\n\nCruise\nLanding and TakeOff (LTO) cycle\n\nand calculate the fuel-burnt emissions by further splitting them.\n\n\n\nLTO phases ([1] Figure 2.5).\n\n\nFor LTO we have four sub-phases:\n\nApproach\nTaxi-in\nTaxi-out\nTake-off\nClimb-out\n\nThe taxi-out sub-phase can be framed by the ground portion from off-block to rwy-entry event which with defined assumptions in term of aircraft & engine type, full thrust percentage and number of engines in use can be handled to an emission calculator to compute CO2, NOx, … emissions.\nThe selection of flight events to model the flight and the further assumptions of how the aircraft is operated between those milestones will produce results with different levels of accuracy and precision.\n\n\nAirspace profile\nMilestones line FIR crossing (x-fir) could be used to extract a flight airspace profile. For example we could have AUA crossing (x-aua) or even elementary airspace (x-esa) ones. The tricky thing is obviously having a non-overlapping airspaces (of the same type)"
  },
  {
    "objectID": "data-preview.html",
    "href": "data-preview.html",
    "title": "Data Preview",
    "section": "",
    "text": "The various data sets (flight list, flight events, and measurements) can be used to provide insights on topics such as traffic counts, runway/taxi-way/parking position usage at airports.\n\n\n\n\n\n\nDisclaimer\n\n\n\nPlease note that due to system maintenance and technical issues experienced by our data provider, OpenSky Network, some of the datasets had incomplete data for certain months when doing the below analysis. We are continuously working with OpenSky to ensure data quality and integrity and this has been resolved this in the meantime in the available data provided by the OPDI (see our Data page). This data preview will be updated soon.\nAffected months include December 2023, January 2024, February 2024, March 2024 and April 2024. Please take this into consideration when viewing the data in this data preview.\nIn addition, please also note that any numbers are influenced by the availability of ADS-B coverage. To view the history of ADS-B coverage by OSN, see here.\n\n\n\n\n\n\n\nTraffic at top 20 European airports\nBelow you see the traffic at the major top 20 European airports (i.e., most observed flights during 2022 and 2024). This data is extracted from the OPDI flight list available for download here.\n\n\n\n\n\n\n\n\n\n\nTraffic at all medium and large European airports (1121 airports)\nBelow you can see the detected traffic for all European medium and large airports. Use the dropdown menu to select an airport of choice (alphabetically ordered). There are 1121 airports in the dropdown menu. This data is extracted from the OPDI flight list available for download here.\n\n\n\n\n\n\n\n\n\n\nFlight events for airport monitoring\nAlso airport event monitoring is possible using the OPDI flight events. An example of random set of flights is given below. Note that the availability of runway, taxiway and parking position events is dependent on the OpenSky Network ADS-B coverage and the availability of OpenStreetMap geographical data. This data is extracted from the OPDI flight events available for download here.\n\n\n\n\n\n\n\n\nFlight events in function of the measurement distance flown (NM)\nAnalyse your flight using the predefined OPDI flight events and OPDI measurements. An example can be seen below with the included measurements. This data is extracted from the OPDI flight events and OPDI measurements available for download here."
  },
  {
    "objectID": "flight-event-data.html",
    "href": "flight-event-data.html",
    "title": "Download Flight Events v0.0.2 Datasets",
    "section": "",
    "text": "Below you will find links to download flight events v0.0.2 data files from January 01, 2022 tso April 30, 2025. Each file is in Parquet format, providing a highly efficient way to store and manage large datasets. The datasets are separated into 10-day intervals. Please note that each dataset covers data up to, but not including, the last day listed in its name."
  },
  {
    "objectID": "flight-event-data.html#available-datasets",
    "href": "flight-event-data.html#available-datasets",
    "title": "Download Flight Events v0.0.2 Datasets",
    "section": "Available Datasets",
    "text": "Available Datasets\nEach dataset corresponds to a specific 10-day period and is listed below for easy access.\n\n\n\n\n\n\nAutomated Download\n\n\n\nIf you want to automate your downloads, you can generate the link for downloading using the following format where YYYYMMDD is the start date of the 10-day period: https://www.eurocontrol.int/performance/data/download/OPDI/v002/flight_events/flight_events_{YYYYMMDD}_{YYYYMMDD_next10}.parquet\nThe first date to start generating intervals for is January 01, 2022. As an example, for January 01, 2022 to January 10, 2022, the link would be:\nhttps://www.eurocontrol.int/performance/data/download/OPDI/v002/flight_events/flight_events_20220101_20220111.parquet"
  },
  {
    "objectID": "flight-list-data.html",
    "href": "flight-list-data.html",
    "title": "Download Flight List v0.0.2 Datasets",
    "section": "",
    "text": "Below you will find links to download flight list v0.0.2 data files from January 01, 2022 to April 30, 2025. Each file is in Parquet format, providing a highly efficient way to store and manage large datasets. The datasets are organized by month."
  },
  {
    "objectID": "flight-list-data.html#available-datasets",
    "href": "flight-list-data.html#available-datasets",
    "title": "Download Flight List v0.0.2 Datasets",
    "section": "Available Datasets",
    "text": "Available Datasets\nEach dataset corresponds to a specific month and year, listed below for easy access.\n\n\n\n\n\n\nAutomated Download\n\n\n\nIf you want to automate your downloads, you can generate the link for downloading using the following format where YYYY is the year of interest and MM the month (using two digits): https://www.eurocontrol.int/performance/data/download/OPDI/v002/flight_list/flight_list_{YYYY}{MM}.parquet\n\n\n\n2022\n\nJanuary 2022\nDownload flight_list_202201.parquet\nFebruary 2022\nDownload flight_list_202202.parquet\nMarch 2022\nDownload flight_list_202203.parquet\nApril 2022\nDownload flight_list_202204.parquet\nMay 2022\nDownload flight_list_202205.parquet\nJune 2022\nDownload flight_list_202206.parquet\nJuly 2022\nDownload flight_list_202207.parquet\nAugust 2022\nDownload flight_list_202208.parquet\nSeptember 2022\nDownload flight_list_202209.parquet\nOctober 2022\nDownload flight_list_202210.parquet\nNovember 2022\nDownload flight_list_202211.parquet\nDecember 2022\nDownload flight_list_202212.parquet\n\n\n\n2023\n\nJanuary 2023\nDownload flight_list_202301.parquet\nFebruary 2023\nDownload flight_list_202302.parquet\nMarch 2023\nDownload flight_list_202303.parquet\nApril 2023\nDownload flight_list_202304.parquet\nMay 2023\nDownload flight_list_202305.parquet\nJune 2023\nDownload flight_list_202306.parquet\nJuly 2023\nDownload flight_list_202307.parquet\nAugust 2023\nDownload flight_list_202308.parquet\nSeptember 2023\nDownload flight_list_202309.parquet\nOctober 2023\nDownload flight_list_202310.parquet\nNovember 2023\nDownload flight_list_202311.parquet\nDecember 2023\nDownload flight_list_202312.parquet\n\n\n\n2024\n\nJanuary 2024\nDownload flight_list_202401.parquet\nFebruary 2024\nDownload flight_list_202402.parquet\nMarch 2024\nDownload flight_list_202403.parquet\nApril 2024\nDownload flight_list_202404.parquet\nMay 2024\nDownload flight_list_202405.parquet\nJune 2024\nDownload flight_list_202406.parquet\nJuly 2024\nDownload flight_list_202407.parquet\nAugust 2024\nDownload flight_list_202408.parquet\nSeptember 2024\nDownload flight_list_202409.parquet\nOctober 2024\nDownload flight_list_202410.parquet\nNovember 2024\nDownload flight_list_202411.parquet\n\n\nWe hope you find these datasets useful for your analysis and research. If you have any questions or require further assistance, please contact us at support@ansperformance.eu."
  },
  {
    "objectID": "roadmap.html",
    "href": "roadmap.html",
    "title": "Roadmap",
    "section": "",
    "text": "The plan is to release subsequent improvements of the Open Performance Data Initiative (OPDI) data sets every two months."
  },
  {
    "objectID": "roadmap.html#future-releases",
    "href": "roadmap.html#future-releases",
    "title": "Roadmap",
    "section": "Future Releases",
    "text": "Future Releases\n\nQ1 2025\nThis release aims to include the following improvements:\n\nInclusion of new event types and occurrences:\n\noff-block\nin-block\nFlight Information Region (FIR) crossing\n\n\n\n\nCandidate topics for future releases\nIn the longer term the OPDI aims to include the following improvements:\n\nInclude more events\n\nstart and stop of holdings\n\nUse third party trajectory data (aside from the available via OpenSky Network (OSN)).\nValidate flight events and measurements using third party data.\nProvide easy access to OSN state vector trajectories at 5-sec granularity\nProvide cleaned up state vector based trajectories, i.e. remove vertical glitches (via filter() in traffic library), associate meteorological information (via fastmeteo library), remove dirty trajectories (too small/short), …"
  },
  {
    "objectID": "roadmap.html#past-releases",
    "href": "roadmap.html#past-releases",
    "title": "Roadmap",
    "section": "Past Releases",
    "text": "Past Releases\nAn overview of past releases and the various versions were used in each OPDI version can be seen below.\n\n\n\n\n\n\n\n\n\n\n\nOPDI version\nRelease date\nFlight List\nFlight Event\nMeasurements\nPeriod\n\n\n\n\nOPDI v0.0.1\n1/12/2023\nFlight List v0.0.1\nFlight Event v0.0.1\nMeasurements v0.0.1\n2 Months\n\n\nOPDI v0.0.2\n1/3/2024\nFlight List v0.0.2\nFlight Event v0.0.2\nMeasurements v0.0.2\n1.5 Years\n\n\nOPDI v0.0.2\n1/8/2024\nFlight List v0.0.2\nFlight Event v0.0.2\nMeasurements v0.0.2\n2.5 Years\n\n\nOPDI v0.0.2\n1/12/2024\nFlight List v0.0.2\nFlight Event v0.0.2\nMeasurements v0.0.2\n±3 Years"
  },
  {
    "objectID": "roadmap.html#contact",
    "href": "roadmap.html#contact",
    "title": "Roadmap",
    "section": "Contact",
    "text": "Contact\nIf you notice any bugs, or if you have any feature requests, please contact us."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The Performance Review Commission (PRC) was established in 1998 by EUROCONTROL’s Permanent Commission.\nIt provides objective information and independent advice to EUROCONTROL’s governing bodies on European Air Traffic Management (ATM) performance, based on extensive research, data analysis and consultation with stakeholders. Its purpose is “to ensure the effective management of the European air traffic management System through a strong, transparent and independent performance review,” as stated in Article 1 of the PRC Terms of Reference and Rules of Procedure.\nThe PRC reports to the EUROCONTROL Permanent Commission through the Provisional Council and is supported by the Performance Review Unit (PRU) operating under the EUROCONTROL Agency with the appropriate level of independence.\nFor more information about the PRC, see here."
  },
  {
    "objectID": "about.html#performance-review-commission",
    "href": "about.html#performance-review-commission",
    "title": "About",
    "section": "",
    "text": "The Performance Review Commission (PRC) was established in 1998 by EUROCONTROL’s Permanent Commission.\nIt provides objective information and independent advice to EUROCONTROL’s governing bodies on European Air Traffic Management (ATM) performance, based on extensive research, data analysis and consultation with stakeholders. Its purpose is “to ensure the effective management of the European air traffic management System through a strong, transparent and independent performance review,” as stated in Article 1 of the PRC Terms of Reference and Rules of Procedure.\nThe PRC reports to the EUROCONTROL Permanent Commission through the Provisional Council and is supported by the Performance Review Unit (PRU) operating under the EUROCONTROL Agency with the appropriate level of independence.\nFor more information about the PRC, see here."
  },
  {
    "objectID": "about.html#open-performance-data-initiative",
    "href": "about.html#open-performance-data-initiative",
    "title": "About",
    "section": "Open Performance Data Initiative",
    "text": "Open Performance Data Initiative\nIn 2022, the PRC launched the Open Performance Data Initiative (OPDI) with a view to establish a data platform, to support higher levels of transparency and reproducibility of performance related monitoring and associated analyses. This initiative addresses the requirement to establish a level playing field for all stakeholders, ranging from the interested public, operational and strategic planners, to political decision-makers. Pursuing an open data-based approach will allow all interested parties to tap into a harmonised data environment to build their assessments, validate results published by other parties, and reproduce findings in support of the political and operational discussion about observed performance.\nThe upcoming challenges to our industry require that stakeholders can embrace and tap into a harmonised and consolidated data set to drive the discussion on higher performance levels, performance expectations in terms of targets, or realised performance benefits following the deployment of new capabilities.\nFor more information about the OPDI, see here."
  },
  {
    "objectID": "about.html#benefits-of-open-access-and-open-data-for-performance-monitoring",
    "href": "about.html#benefits-of-open-access-and-open-data-for-performance-monitoring",
    "title": "About",
    "section": "Benefits of Open Access and Open Data for Performance Monitoring",
    "text": "Benefits of Open Access and Open Data for Performance Monitoring\nTo understand the depth of the proposed OPDI it is vital to define the key terminology upfront.\n\nOpen Access: Open Access refers to the process of managing copyright and licensing terms and access to the data. This access mode is vital to overcome today’s limitation and remove barriers such as price (including subscriptions, licensing fees, user-pay-principles, or even view fees), and permission (e.g., licensing restrictions) to enable free access and use of the data.\nOpen Data: The term Open Data refers to data - typically managed and available online – which is free of cost and accessible data. Open data can be freely used, reused, and distributed provided that the data source is attributed.\nOpen-Source Software: Open-Source Software is software which source code can be openly accessed, inspected, modified, and enhanced by anyone.\n\nThe focus of the OPDI is on open data, in particular open access and open use of data for non-commercial purposes. It is understood that potential developments of novel algorithms and techniques can produce tools that are made available to the community as open-source software.\nThere exists a huge body of literature highlighting the impact of open data. Across the different sources the following impact areas emerge:\n\n\n\n\n\n\nTransparency and accountability\n\n\n\n\n\nA key tenet of the performance-based approach is independent and impartial monitoring to provide the evidence for achieved performance levels and to identify and share best practice for further performance enhancements in ATM.\nHigher levels of transparency and accountability provide the foundation for a democratisation of air traffic management. Public and stakeholder access to data is also seen as a key ingredient to establish accountability. This also requires a culture change that is implicitly built into the performance-based approach. Observed levels of performance are publicly communicated and tracked. Associated performance measurement algorithms are published and the monitoring results are reproducible.\n\n\n\n\n\n\n\n\n\nInnovation, participation, and joint development\n\n\n\n\n\nOpen data from both public and private sources are adding a new dimension2 to the data revolution. It also is a key ingredient to leverage the promises of “big data”, or supporting data-analytical advances in artificial intelligence/machine-learning.\nA clear driver for innovation is the opportunity to understand how systems work, where bottlenecks emerge or certain patterns manifest. At the same time, it is important to understand the parameters and conditions for good and best-in-class performance. Sharing and access to data therefore fosters to have another view on performance by observing new developments with different priorities/ perspectives, or other organisational /institutional factors limiting the use and value creation from data, including its combination with additional data and resources.\nThe ability of public, interested researchers, policymakers/think tanks, or strategic planners to access the data and exploit it creates joint communities of interest. This may enhance the value of the data to drive joint developments ranging from data standardisation, including access and storage, but also to build on the data. The latter may range from methodological approaches, operational solutions and other tools.\n\n\n\n\n\n\n\n\n\nEffectiveness\n\n\n\n\n\nAt the heart of the performance-based approach is the potential to achieve higher levels of performance and associated decision-making through data-driven decision-making. This may affect day-to-day decision-making, but also longterm decision such as the need for adopting new operational concepts or deploying operational capabilities.\nOpen data goes beyond the classical – potentially limited –sharing of data in support of use-case analyses, projects or activities. It is a continual process which allows to champion and demonstrate observed performance levels. In that respect open performance data can also serve as a tool to improve communication and partnerships in terms of data sharing.\n\n\n\n\n\n\n\n\n\nEngagement and Empowerment\n\n\n\n\n\nThe most direct impact of open data for engagement and empowerment is related to its transparency effects. Air transportation and air traffic management are at a crossroad. Future political goals and expected performance levels require higher levels of transparency and the existence of a data basis in support of verification and validation/reproduction of results. The transparency discussion will result from a higher pressure on the industry to demonstrate – for example – its contribution to climate change and greenhouse gas emissions. There is also a discussion on the success of air navigation system modernisation (i.e., transformation) in general. This requires demonstration of operational performance benefits derived from funding and modernisation activities.\nThe need to address the societal challenges and political goals will require a wider engagement of air navigation with the public and policy level, but also facilitate such an engagement with the industry and interested public. The PRC is confident that the practice of the past to provide a platform to validate and reproduce performance observations will facilitate higher levels of engagement and empowerment with and between stakeholders and public. Open data can be a key enabler to facilitate this engagement and ensure the appropriate level of independent transparency to drive and inform the public debate, political and strategic decision-making.\n\n\n\nOpen data and performance analytics are often viewed as separate practices, however, both are inextricable when it comes to the operations of modern governance. To ensure transparent and independent review, open data provides the underlying “raw material” for the analysis and monitoring of performance. In that respect, PRC’s OPDI aims at increasing transparency, supporting higher levels of data access and information availability for decision-making, engaging and increasing accountability of involved stakeholders.\nFor more information about the potential benefits of the open access and open data for performance monitoring, see here."
  },
  {
    "objectID": "methodology.html",
    "href": "methodology.html",
    "title": "Methodology",
    "section": "",
    "text": "The various methodologies used to extract flight lists, flight events and measurements from trajectory state vectors. The code is publically available on GitHub."
  },
  {
    "objectID": "methodology.html#flight-list",
    "href": "methodology.html#flight-list",
    "title": "Methodology",
    "section": "Flight List",
    "text": "Flight List\nTo construct the flight list the trajectory needs to be identified from the state vectors. In addition, one needs to assign the Aerodrome of Departure (ADEP) and Aerodrome of Destination (ADES). Based on the state vector source, the trajectory might already contain an identifier id and an ADEP and ADES. The various subsequent algorithms are considered iterative improvements.\n\n\n\nVersion\nImprovements\nDevelopment date\nMethodology\n\n\n\n\nv0.0.1\nInitial flight, ADEP and ADES identification algorithm.\nNovember 2023\nLink\n\n\nv0.0.2\nSecond iteration flight, ADEP and ADES identification algorithm.\nMarch 2024\nLink\n\n\n\n\nFlight List Methodology\n\n\n\n\n\n\nFlight List v0.0.1\n\n\n\n\n\nObject: Flight list\nVersion tag: flight_list_v0.0.1\nData source(s): OpenSky Network (OSN)\nFlight identification algorithm(s):\nGiven the OSN state vectors, identifiers or ids are assigned in monthly batches. The statevectors are grouped per icao24 and callsign value. Each group is subsequently split and assigned a splitnumber if it is detected that there is a gap in between subsequent state vectors larger than 30 minutes or if there is a gap of 10 minutes whilst the altitude is below 1km.\nThe resulting trajectories are given ids which consist of the SHA256 value of the icao24 and callsign followed by the splitnumber and the year and month of the event_time. This is done to ensure uniqueness of the id.\nADEP/ADES identification algorithm(s):\nTo approximate the ADEP or ADES of a departing or arriving flight, coordinate grids are calculated for each airport with a radius of 10 km and a latitude/longitude step of 0.0001 degrees. For each point in the circular grid surrounding the airport, the distance to the Aerodrome Reference Point (ARP) is calculated.\nThe trajectories identified in the previous step are filtered to only retain state vectors with an altitude lower than 1,000 ft. Onto the latitude and longitude (rounded to 0.0001 degrees) of the remaining state vectors the airport coordinate grids are superimposed. Each state vector in the resulting data sets now indicates the various aerodromes the coordinates overlap with. If there are multiple aerodromes available, the minimal initial/final distance to the aerodrome indicates the most likely ADEP or ADES.\n\n\n\n\n\n\n\n\n\nFlight List v0.0.2\n\n\n\n\n\nObject: Flight list\nVersion tag: flight_list_v0.0.2\nData source(s): OSN\nFlight identification algorithm(s):\nGiven the OSN state vectors, identifiers or ids are assigned in monthly batches. The statevectors are grouped per icao24 and callsign value. Each group is subsequently split and assigned a splitnumber if it is detected that there is a gap in between subsequent state vectors larger than 30 minutes or if there is a gap of 10 minutes whilst the altitude is below 1km.\nThe resulting trajectories are given ids which consist of the SHA256 value of the icao24 and callsign followed by the splitnumber and the year and month of the event_time. This is done to ensure uniqueness of the id.\nADEP/ADES identification algorithm(s):\nTo approximate the ADEP or ADES of a departing or arriving flight, the method has been adapted from v0.0.1. Compared to last version, circular geospatial detection grids are now created using Uber H3 geospatial library calculated around each airport with a radius of 30 NM and an h3 resolution of 7. The trajectories are filtered to only retain state vectors with an altitude lower than 4,000 ft to enable adequate detection of both arrivals and departures. For each lat/lon point of the trajectories a H3 tag is then determined to match with the H3 tags of the cells in the circular grid.\nOnto the H3 tags of these state vectors the airport H3 grids are superimposed. Each state vector in the resulting data sets now indicates the various aerodromes the cells overlap with. If there are multiple aerodromes available, the minimal initial/final distance to the aerodrome indicates the most likely ADEP or ADES. Others are saved as potential ADEP ADEP_P and potential ADES ADES_P."
  },
  {
    "objectID": "methodology.html#flight-events",
    "href": "methodology.html#flight-events",
    "title": "Methodology",
    "section": "Flight Events",
    "text": "Flight Events\nThe flight events are extracted from the identified trajectories using different methods for the different types of flight events.\n\n\n\nVersion\nImprovements\nDevelopment date\nMethodology\n\n\n\n\nv0.0.1\nInitial flight event extraction algorithm.\nNovember 2023\nLink\n\n\nv0.0.2\nSecond iteration flight event extraction algorithm.\nMay 2024\nLink\n\n\n\n\nFlight Events Methodology\n\n\n\n\n\n\nFlight Events v0.0.1\n\n\n\n\n\nObject: Flight Events\nVersion tag: flight_events_v0.0.1\nData source(s): OSN\nFlight event type(s):\nCurrently the following flight event types are extracted:\n\n\n\n\n\n\n\nEvent type\nDescription\n\n\n\n\nlevel-start\nThe start of a level segment.\n\n\nlevel-end\nThe end of a level segment.\n\n\ntop-of-descent\nThe top-of-descent.\n\n\ntop-of-climb\nThe top-of-climb.\n\n\ntake-off\nThe take-off.\n\n\nlanding\nThe landing.\n\n\nfirst-xing-fl50/70/100/245\nThe first crossing of the flight level (FL) 50/70/100/245 during flight.\n\n\nlast-xing-fl50/70/100/245\nThe last crossing of the flight level (FL) 50/70/100/245 during flight.\n\n\n\nFlight event algorithm(s):\nPhase derivations\nUsing OpenAP - The Open Model for Aircraft Performance and Emissions by Dr. Junzi Sun of the TU Delft, the state vectors of each flight were assessed and classified into various phases (GR = Ground phase, LVL = Level segment phase, CR = Cruise phase, DE = Descent phase, CL = Climb phase). Using this the events are identified in each flight as follows:\n\nlevel-start: The first state vector in each level segment phase (LVL).\nlevel-end: The last state vector in each level segment phase (LVL).\ntop-of-climb: The first state vector of the first cruise phase (CR).\ntop-of-descent: The last state vector of the last cruise phase (CR).\ntake-off: The first state vector of the climb phase (CL) after a ground phase (GND).\nlanding: The first state vector of the ground phase (GND) after a descent phase (DE).\n\nCrossings\nFor each crossing of the respective flight levels (FL50/70/100/245) the algorithm is as follows:\n\nA smooth average flight level is calculated for each state vector.\n\nThe flight values are compared between each subsequent state vector.\n\nThe first time it crosses a flight level of interest, the crossing state vector is recorded as a first-xing event. The last time it crosses a flight level of interest, the crossing state vector is recorded as a last-xing event.\n\n\n\n\n\n\n\n\n\nFlight Events v0.0.2\n\n\n\n\n\nObject: Flight Events\nVersion tag: flight_events_v0.0.2\nData source(s): OSN\nFlight event type(s):\nCurrently the following flight event types are extracted:\n\n\n\nEvent type\nDescription\n\n\n\n\nlevel-start\nThe start of a level segment.\n\n\nlevel-end\nThe end of a level segment.\n\n\ntop-of-descent\nThe top-of-descent.\n\n\ntop-of-climb\nThe top-of-climb.\n\n\ntake-off\nThe take-off.\n\n\nlanding\nThe landing.\n\n\nfirst-xing-fl50/70/100/245\nThe first crossing of the flight level (FL) 50/70/100/245 during flight.\n\n\nlast-xing-fl50/70/100/245\nThe last crossing of the flight level (FL) 50/70/100/245 during flight.\n\n\nentry-runway\nThe entry of a runway at an airport. Additional identifiable OpenStreetMap information of the runway is embedded in the info field in the form of a json.\n\n\nexit-runway\nThe exit of a runway at an airport. Additional identifiable OpenStreetMap information of the runway is embedded in the info field in the form of a json.\n\n\nentry-taxiway\nThe entry of a taxiway at an airport. Additional identifiable OpenStreetMap information of the runway is embedded in the info field in the form of a json.\n\n\nexit-taxiway\nThe exit of a taxiway at an airport. Additional identifiable OpenStreetMap information of the runway is embedded in the info field in the form of a json.\n\n\nentry-parking_position\nThe entry of a parking position at an airport. Additional identifiable OpenStreetMap information of the runway is embedded in the info field in the form of a json.\n\n\nexit-parking_position\nThe exit of a parking position at an airport. Additional identifiable OpenStreetMap information of the runway is embedded in the info field in the form of a json.\n\n\n\nFlight event algorithm(s):\nPhase derivations\nUsing OpenAP - The Open Model for Aircraft Performance and Emissions by Dr. Junzi Sun of the TU Delft, the state vectors of each flight were assessed and classified into various phases (GR = Ground phase, LVL = Level segment phase, CR = Cruise phase, DE = Descent phase, CL = Climb phase). Using this the events are identified in each flight as follows:\n\nlevel-start: The first state vector in each level segment phase (LVL).\nlevel-end: The last state vector in each level segment phase (LVL).\ntop-of-climb: The first state vector of the first cruise phase (CR).\ntop-of-descent: The last state vector of the last cruise phase (CR).\ntake-off: The first state vector of the climb phase (CL) after a ground phase (GND).\nlanding: The first state vector of the ground phase (GND) after a descent phase (DE).\n\nThis algorithm has been adapted in this version to a native PySpark version for processing speed improvements.\nCrossings\nFor each crossing of the respective flight levels (FL50/70/100/245) the algorithm is as follows:\n\nA smooth average flight level is calculated for each state vector.\n\nThe flight values are compared between each subsequent state vector.\n\nThe first time it crosses a flight level of interest, the crossing state vector is recorded as a first-xing event. The last time it crosses a flight level of interest, the crossing state vector is recorded as a last-xing event.\nAirport events\nFor each airport element (runway/taxiway/parking position) that we detect entry and exit in, the geographic information has been retrieved from OpenStreetMap. This information has been processed and made a geospatial grid using Uber H3. Following this, the trajectories have been matched to these grid cells at resolution 12.\nA separate open source project is being developed to use this for small scale applications. See HexAero."
  },
  {
    "objectID": "methodology.html#measurements",
    "href": "methodology.html#measurements",
    "title": "Methodology",
    "section": "Measurements",
    "text": "Measurements\n\n\n\nVersion\nImprovements\nDevelopment date\nMethodology\n\n\n\n\nv0.0.1\nInitial measurement calculation algorithm.\nNovember 2023\nLink\n\n\nv0.0.2\nSecond iteration measurement calculation algorithm.\nJune 2024\nLink\n\n\n\n\nMeasurement Methodology\n\n\n\n\n\n\nMeasurements v0.0.1\n\n\n\n\n\nObject: Measurements\nVersion tag: measurements_v0.0.1\nData source(s): OpenSky Network (OSN)\nMeasurement type(s):\nCurrently the following measurements are determined:\n\n\n\n\n\n\n\nMeasurement type\nDescription\n\n\n\n\nDistance Flown (NM)\nThe cumulative distance flown up until this this event since the aircraft started its’ trajectory (at time first_seen).\n\n\n\nMeasurement algorithm(s):\nDistance Flown (NM)\nThe Distance flown (NM) is calculated between each subsequent state vector using the great circle distance. The unit is nautic miles (NM). This segment distance is then summed cumulatively for each state vector since the first state vector (at time first_seen). This determined flown distance in nautic miles is then taken as measurement when identifying a flight event.\n\n\n\n\n\n\n\n\n\nMeasurements v0.0.2\n\n\n\n\n\nObject: Measurements\nVersion tag: measurements_v0.0.2\nData source(s): OpenSky Network (OSN)\nMeasurement type(s):\nCurrently the following measurements are determined:\n\n\n\n\n\n\n\nMeasurement type\nDescription\n\n\n\n\nDistance Flown (NM)\nThe cumulative distance flown in nautic miles up until this this event since the aircraft started its’ trajectory (at time first_seen).\n\n\nTime passed (s)\nThe cumulative time passed in seconds up until this this event since the aircraft started its’ trajectory (at time first_seen).\n\n\n\nMeasurement algorithm(s):\nDistance Flown (NM)\nThe Distance flown (NM) is calculated between each subsequent state vector using the great circle distance. The unit is nautic miles (NM). This segment distance is then summed cumulatively for each state vector since the first state vector (at time first_seen). This determined flown distance in nautic miles is then taken as measurement when identifying a flight event.\nTime passed (s)\nThe Time passed (s) is calculated between each subsequent state vector by subtracting the timestamps and taking a cumulative sum. The unit is seconds (s)."
  },
  {
    "objectID": "flight-event-data.html#download-links",
    "href": "flight-event-data.html#download-links",
    "title": "Download Flight Events v0.0.2 Datasets",
    "section": "Download Links",
    "text": "Download Links\n\nJanuary 01, 2022 - January 11, 2022\nDownload flight_events_20220101_20220111.parquet\nJanuary 11, 2022 - January 21, 2022\nDownload flight_events_20220111_20220121.parquet\nJanuary 21, 2022 - January 31, 2022\nDownload flight_events_20220121_20220131.parquet\nJanuary 31, 2022 - February 10, 2022\nDownload flight_events_20220131_20220210.parquet\nFebruary 10, 2022 - February 20, 2022\nDownload flight_events_20220210_20220220.parquet\nFebruary 20, 2022 - March 02, 2022\nDownload flight_events_20220220_20220302.parquet\nMarch 02, 2022 - March 12, 2022\nDownload flight_events_20220302_20220312.parquet\nMarch 12, 2022 - March 22, 2022\nDownload flight_events_20220312_20220322.parquet\nMarch 22, 2022 - April 01, 2022\nDownload flight_events_20220322_20220401.parquet\nApril 01, 2022 - April 11, 2022\nDownload flight_events_20220401_20220411.parquet\nApril 11, 2022 - April 21, 2022\nDownload flight_events_20220411_20220421.parquet\nApril 21, 2022 - May 01, 2022\nDownload flight_events_20220421_20220501.parquet\nMay 01, 2022 - May 11, 2022\nDownload flight_events_20220501_20220511.parquet\nMay 11, 2022 - May 21, 2022\nDownload flight_events_20220511_20220521.parquet\nMay 21, 2022 - May 31, 2022\nDownload flight_events_20220521_20220531.parquet\nMay 31, 2022 - June 10, 2022\nDownload flight_events_20220531_20220610.parquet\nJune 10, 2022 - June 20, 2022\nDownload flight_events_20220610_20220620.parquet\nJune 20, 2022 - June 30, 2022\nDownload flight_events_20220620_20220630.parquet\nJune 30, 2022 - July 10, 2022\nDownload flight_events_20220630_20220710.parquet\nJuly 10, 2022 - July 20, 2022\nDownload flight_events_20220710_20220720.parquet\nJuly 20, 2022 - July 30, 2022\nDownload flight_events_20220720_20220730.parquet\nJuly 30, 2022 - August 09, 2022\nDownload flight_events_20220730_20220809.parquet\nAugust 09, 2022 - August 19, 2022\nDownload flight_events_20220809_20220819.parquet\nAugust 19, 2022 - August 29, 2022\nDownload flight_events_20220819_20220829.parquet\nAugust 29, 2022 - September 08, 2022\nDownload flight_events_20220829_20220908.parquet\nSeptember 08, 2022 - September 18, 2022\nDownload flight_events_20220908_20220918.parquet\nSeptember 18, 2022 - September 28, 2022\nDownload flight_events_20220918_20220928.parquet\nSeptember 28, 2022 - October 08, 2022\nDownload flight_events_20220928_20221008.parquet\nOctober 08, 2022 - October 18, 2022\nDownload flight_events_20221008_20221018.parquet\nOctober 18, 2022 - October 28, 2022\nDownload flight_events_20221018_20221028.parquet\nOctober 28, 2022 - November 07, 2022\nDownload flight_events_20221028_20221107.parquet\nNovember 07, 2022 - November 17, 2022\nDownload flight_events_20221107_20221117.parquet\nNovember 17, 2022 - November 27, 2022\nDownload flight_events_20221117_20221127.parquet\nNovember 27, 2022 - December 07, 2022\nDownload flight_events_20221127_20221207.parquet\nDecember 07, 2022 - December 17, 2022\nDownload flight_events_20221207_20221217.parquet\nDecember 17, 2022 - December 27, 2022\nDownload flight_events_20221217_20221227.parquet\nDecember 27, 2022 - January 06, 2023\nDownload flight_events_20221227_20230106.parquet\nJanuary 06, 2023 - January 16, 2023\nDownload flight_events_20230106_20230116.parquet\nJanuary 16, 2023 - January 26, 2023\nDownload flight_events_20230116_20230126.parquet\nJanuary 26, 2023 - February 05, 2023\nDownload flight_events_20230126_20230205.parquet\nFebruary 05, 2023 - February 15, 2023\nDownload flight_events_20230205_20230215.parquet\nFebruary 15, 2023 - February 25, 2023\nDownload flight_events_20230215_20230225.parquet\nFebruary 25, 2023 - March 07, 2023\nDownload flight_events_20230225_20230307.parquet\nMarch 07, 2023 - March 17, 2023\nDownload flight_events_20230307_20230317.parquet\nMarch 17, 2023 - March 27, 2023\nDownload flight_events_20230317_20230327.parquet\nMarch 27, 2023 - April 06, 2023\nDownload flight_events_20230327_20230406.parquet\nApril 06, 2023 - April 16, 2023\nDownload flight_events_20230406_20230416.parquet\nApril 16, 2023 - April 26, 2023\nDownload flight_events_20230416_20230426.parquet\nApril 26, 2023 - May 06, 2023\nDownload flight_events_20230426_20230506.parquet\nMay 06, 2023 - May 16, 2023\nDownload flight_events_20230506_20230516.parquet\nMay 16, 2023 - May 26, 2023\nDownload flight_events_20230516_20230526.parquet\nMay 26, 2023 - June 05, 2023\nDownload flight_events_20230526_20230605.parquet\nJune 05, 2023 - June 15, 2023\nDownload flight_events_20230605_20230615.parquet\nJune 15, 2023 - June 25, 2023\nDownload flight_events_20230615_20230625.parquet\nJune 25, 2023 - July 05, 2023\nDownload flight_events_20230625_20230705.parquet\nJuly 05, 2023 - July 15, 2023\nDownload flight_events_20230705_20230715.parquet\nJuly 15, 2023 - July 25, 2023\nDownload flight_events_20230715_20230725.parquet\nJuly 25, 2023 - August 04, 2023\nDownload flight_events_20230725_20230804.parquet\nAugust 04, 2023 - August 14, 2023\nDownload flight_events_20230804_20230814.parquet\nAugust 14, 2023 - August 24, 2023\nDownload flight_events_20230814_20230824.parquet\nAugust 24, 2023 - September 03, 2023\nDownload flight_events_20230824_20230903.parquet\nSeptember 03, 2023 - September 13, 2023\nDownload flight_events_20230903_20230913.parquet\nSeptember 13, 2023 - September 23, 2023\nDownload flight_events_20230913_20230923.parquet\nSeptember 23, 2023 - October 03, 2023\nDownload flight_events_20230923_20231003.parquet\nOctober 03, 2023 - October 13, 2023\nDownload flight_events_20231003_20231013.parquet\nOctober 13, 2023 - October 23, 2023\nDownload flight_events_20231013_20231023.parquet\nOctober 23, 2023 - November 02, 2023\nDownload flight_events_20231023_20231102.parquet\nNovember 02, 2023 - November 12, 2023\nDownload flight_events_20231102_20231112.parquet\nNovember 12, 2023 - November 22, 2023\nDownload flight_events_20231112_20231122.parquet\nNovember 22, 2023 - December 02, 2023\nDownload flight_events_20231122_20231202.parquet\nDecember 02, 2023 - December 12, 2023\nDownload flight_events_20231202_20231212.parquet\nDecember 12, 2023 - December 22, 2023\nDownload flight_events_20231212_20231222.parquet\nDecember 22, 2023 - January 01, 2024\nDownload flight_events_20231222_20240101.parquet\nJanuary 01, 2024 - January 11, 2024\nDownload flight_events_20240101_20240111.parquet\nJanuary 11, 2024 - January 21, 2024\nDownload flight_events_20240111_20240121.parquet\nJanuary 21, 2024 - January 31, 2024\nDownload flight_events_20240121_20240131.parquet\nJanuary 31, 2024 - February 10, 2024\nDownload flight_events_20240131_20240210.parquet\nFebruary 10, 2024 - February 20, 2024\nDownload flight_events_20240210_20240220.parquet\nFebruary 20, 2024 - March 01, 2024\nDownload flight_events_20240220_20240301.parquet\nMarch 01, 2024 - March 11, 2024\nDownload flight_events_20240301_20240311.parquet\nMarch 11, 2024 - March 21, 2024\nDownload flight_events_20240311_20240321.parquet\nMarch 21, 2024 - March 31, 2024\nDownload flight_events_20240321_20240331.parquet\nMarch 31, 2024 - April 10, 2024\nDownload flight_events_20240331_20240410.parquet\nApril 10, 2024 - April 20, 2024\nDownload flight_events_20240410_20240420.parquet\nApril 20, 2024 - April 30, 2024\nDownload flight_events_20240420_20240430.parquet\nApril 30, 2024 - May 10, 2024\nDownload flight_events_20240430_20240510.parquet\nMay 10, 2024 - May 20, 2024\nDownload flight_events_20240510_20240520.parquet\nMay 20, 2024 - May 30, 2024\nDownload flight_events_20240520_20240530.parquet\nMay 30, 2024 - June 09, 2024\nDownload flight_events_20240530_20240609.parquet\nJune 09, 2024 - June 19, 2024\nDownload flight_events_20240609_20240619.parquet\nJune 19, 2024 - June 29, 2024\nDownload flight_events_20240619_20240629.parquet\nJune 29, 2024 - July 09, 2024\nDownload flight_events_20240629_20240709.parquet\nJuly 09, 2024 - July 19, 2024\nDownload flight_events_20240709_20240719.parquet\nJuly 19, 2024 - July 29, 2024\nDownload flight_events_20240719_20240729.parquet\nJuly 29, 2024 - August 08, 2024\nDownload flight_events_20240729_20240808.parquet\nAugust 08, 2024 - August 18, 2024\nDownload flight_events_20240808_20240818.parquet\nAugust 18, 2024 - August 28, 2024\nDownload flight_events_20240818_20240828.parquet\nAugust 28, 2024 - September 07, 2024\nDownload flight_events_20240828_20240907.parquet\nSeptember 07, 2024 - September 17, 2024\nDownload flight_events_20240907_20240917.parquet\nSeptember 17, 2024 - September 27, 2024\nDownload flight_events_20240917_20240927.parquet\nSeptember 27, 2024 - October 07, 2024\nDownload flight_events_20240927_20241007.parquet\nOctober 07, 2024 - October 17, 2024\nDownload flight_events_20241007_20241017.parquet\nOctober 17, 2024 - October 27, 2024\nDownload flight_events_20241017_20241027.parquet\nOctober 27, 2024 - November 06, 2024\nDownload flight_events_20241027_20241106.parquet\nNovember 06, 2024 - November 16, 2024\nDownload flight_events_20241106_20241116.parquet\nNovember 16, 2024 - November 26, 2024\nDownload flight_events_20241116_20241126.parquet\nNovember 26, 2024 - December 06, 2024\nDownload flight_events_20241126_20241206.parquet\nDecember 06, 2024 - December 16, 2024\nDownload flight_events_20241206_20241216.parquet\nDecember 16, 2024 - December 26, 2024\nDownload flight_events_20241216_20241226.parquet\nDecember 26, 2024 - January 05, 2025\nDownload flight_events_20241226_20250105.parquet\nJanuary 05, 2025 - January 15, 2025\nDownload flight_events_20250105_20250115.parquet\nJanuary 15, 2025 - January 25, 2025\nDownload flight_events_20250115_20250125.parquet\nJanuary 25, 2025 - February 04, 2025\nDownload flight_events_20250125_20250204.parquet\nFebruary 04, 2025 - February 14, 2025\nDownload flight_events_20250204_20250214.parquet\nFebruary 14, 2025 - February 24, 2025\nDownload flight_events_20250214_20250224.parquet\nFebruary 24, 2025 - March 06, 2025\nDownload flight_events_20250224_20250306.parquet\nMarch 06, 2025 - March 16, 2025\nDownload flight_events_20250306_20250316.parquet\nMarch 16, 2025 - March 26, 2025\nDownload flight_events_20250316_20250326.parquet\nMarch 26, 2025 - April 05, 2025\nDownload flight_events_20250326_20250405.parquet\nApril 05, 2025 - April 15, 2025\nDownload flight_events_20250405_20250415.parquet\nApril 15, 2025 - April 25, 2025\nDownload flight_events_20250415_20250425.parquet\nApril 25, 2025 - May 05, 2025\nDownload flight_events_20250425_20250505.parquet\nMay 05, 2025 - May 15, 2025\nDownload flight_events_20250505_20250515.parquet\nMay 15, 2025 - May 25, 2025\nDownload flight_events_20250515_20250525.parquet\nMay 25, 2025 - June 04, 2025\nDownload flight_events_20250525_20250604.parquet\nJune 04, 2025 - June 14, 2025\nDownload flight_events_20250604_20250614.parquet\nJune 14, 2025 - June 24, 2025\nDownload flight_events_20250614_20250624.parquet\nJune 24, 2025 - July 04, 2025\nDownload flight_events_20250624_20250704.parquet\nJuly 04, 2025 - July 14, 2025\nDownload flight_events_20250704_20250714.parquet\nJuly 14, 2025 - July 24, 2025\nDownload flight_events_20250714_20250724.parquet\nJuly 24, 2025 - August 03, 2025\nDownload flight_events_20250724_20250803.parquet\nAugust 03, 2025 - August 13, 2025\nDownload flight_events_20250803_20250813.parquet\nAugust 13, 2025 - August 23, 2025\nDownload flight_events_20250813_20250823.parquet\nAugust 23, 2025 - September 02, 2025\nDownload flight_events_20250823_20250902.parquet\nSeptember 02, 2025 - September 12, 2025\nDownload flight_events_20250902_20250912.parquet\nSeptember 12, 2025 - September 22, 2025\nDownload flight_events_20250912_20250922.parquet\nSeptember 22, 2025 - October 02, 2025\nDownload flight_events_20250922_20251002.parquet\nOctober 02, 2025 - October 12, 2025\nDownload flight_events_20251002_20251012.parquet\nOctober 12, 2025 - October 22, 2025\nDownload flight_events_20251012_20251022.parquet\nOctober 22, 2025 - November 01, 2025\nDownload flight_events_20251022_20251101.parquet\nNovember 01, 2025 - November 11, 2025\nDownload flight_events_20251101_20251111.parquet\nNovember 11, 2025 - November 21, 2025\nDownload flight_events_20251111_20251121.parquet\nNovember 21, 2025 - December 01, 2025\nDownload flight_events_20251121_20251201.parquet\nDecember 01, 2025 - December 11, 2025\nDownload flight_events_20251201_20251211.parquet\nDecember 11, 2025 - December 21, 2025\nDownload flight_events_20251211_20251221.parquet\nDecember 21, 2025 - December 31, 2025\nDownload flight_events_20251221_20251231.parquet\n\n\nWe hope you find these datasets useful for your analysis and research. If you have any questions or require further assistance, please contact us at support@ansperformance.eu."
  },
  {
    "objectID": "flight-event-data.html#automated-download",
    "href": "flight-event-data.html#automated-download",
    "title": "Download Flight Events v0.0.2 Datasets",
    "section": "Automated Download",
    "text": "Automated Download\nIf you want to automate your downloads, you can generate the link for downloading using the following format where YYYYMMDD is the start date of the 10-day period. Note that the first date to start generating intervals for is January 01, 2022.\nhttps://www.eurocontrol.int/performance/data/download/OPDI/v002/flight_events/flight_events_{YYYYMMDD}_{YYYYMMDD_next10}.parquet\n\n\n\n\n\n\nPython download script example\n\n\n\n\n\n\nimport os\nimport requests\nfrom datetime import datetime, timedelta\nfrom dateutil.relativedelta import relativedelta\n\ndef generate_urls(data_type: str, start_date: str, end_date: str) -&gt; list:\n    \"\"\"\n    Generate a list of URLs for flight lists, flight events, or measurements.\n\n    Args:\n        data_type (str): Type of data (\"flight_list\", \"flight_events\", \"measurements\").\n        start_date (str): The start date in the format YYYYMM or YYYYMMDD.\n        end_date (str): The end date in the format YYYYMM or YYYYMMDD.\n\n    Returns:\n        list: List of generated URLs.\n    \"\"\"\n    base_url = f\"https://www.eurocontrol.int/performance/data/download/OPDI/v002/{data_type}/{data_type}_\"\n\n    urls = []\n    \n    if data_type == \"flight_list\":  # Monthly intervals\n        start_dt = datetime.strptime(start_date, \"%Y%m\")\n        end_dt = datetime.strptime(end_date, \"%Y%m\")\n        delta = relativedelta(months=1)\n    else:  # Flight events & Measurements: 10-day intervals\n        start_dt = datetime.strptime(start_date, \"%Y%m%d\")\n        end_dt = datetime.strptime(end_date, \"%Y%m%d\")\n        delta = timedelta(days=10)\n\n    current_dt = start_dt\n    while current_dt &lt;= end_dt:\n        if data_type == \"flight_list\":\n            url = f\"{base_url}{current_dt.strftime('%Y%m')}.parquet\"\n        else:\n            next_dt = current_dt + delta\n            url = f\"{base_url}{current_dt.strftime('%Y%m%d')}_{next_dt.strftime('%Y%m%d')}.parquet\"\n        \n        urls.append(url)\n        current_dt += delta\n\n    return urls\n\ndef download_files(urls: list, save_folder: str):\n    \"\"\"\n    Download files from the generated URLs and save them in the specified folder.\n\n    Args:\n        urls (list): List of URLs to download.\n        save_folder (str): Folder to save downloaded files.\n    \"\"\"\n    os.makedirs(save_folder, exist_ok=True)\n\n    for url in urls:\n        file_name = url.split(\"/\")[-1]\n        save_path = os.path.join(save_folder, file_name)\n\n        if os.path.exists(save_path):\n            print(f\"Skipping {file_name}, already exists.\")\n            continue\n\n        print(f\"Downloading {url}...\")\n\n        try:\n            response = requests.get(url, stream=True)\n            response.raise_for_status()\n\n            with open(save_path, \"wb\") as file:\n                for chunk in response.iter_content(chunk_size=1024):\n                    file.write(chunk)\n\n            print(f\"Saved to {save_path}\")\n\n        except requests.exceptions.RequestException as e:\n            print(f\"Failed to download {url}: {e}\")\n\nif __name__ == \"__main__\":\n    datasets = {\n        #\"flight_list\": (\"202201\", \"202412\"),\n        \"flight_events\": (\"20220101\", \"20241231\")#,\n        #\"measurements\": (\"20220101\", \"20241231\")\n    }\n\n    for data_type, (start_date, end_date) in datasets.items():\n        urls = generate_urls(data_type, start_date, end_date)\n        download_files(urls, f\"./data/{data_type}\")\n\n\n\n\n\n\n\n\n\n\nR download script example\n\n\n\n\n\n\nlibrary(httr)\nlibrary(lubridate)\nlibrary(fs)\n\ngenerate_urls &lt;- function(data_type, start_date, end_date) {\n  # Generates a list of URLs for flight lists, flight events, or measurements.\n  #\n  # Args:\n  #   data_type (character): Type of data (\"flight_list\", \"flight_events\", \"measurements\").\n  #   start_date (character): The start date in format YYYYMM or YYYYMMDD.\n  #   end_date (character): The end date in format YYYYMM or YYYYMMDD.\n  #\n  # Returns:\n  #   A vector of URLs.\n  \n  base_url &lt;- paste0(\"https://www.eurocontrol.int/performance/data/download/OPDI/v002/\", data_type, \"/\", data_type, \"_\")\n  urls &lt;- c()\n  \n  if (data_type == \"flight_list\") {\n    start_dt &lt;- ymd(paste0(start_date, \"01\"))\n    end_dt &lt;- ymd(paste0(end_date, \"01\"))\n    delta &lt;- months(1)\n  } else {\n    start_dt &lt;- ymd(start_date)\n    end_dt &lt;- ymd(end_date)\n    delta &lt;- days(10)\n  }\n  \n  current_dt &lt;- start_dt\n  while (current_dt &lt;= end_dt) {\n    if (data_type == \"flight_list\") {\n      url &lt;- paste0(base_url, format(current_dt, \"%Y%m\"), \".parquet\")\n    } else {\n      next_dt &lt;- current_dt + delta\n      url &lt;- paste0(base_url, format(current_dt, \"%Y%m%d\"), \"_\", format(next_dt, \"%Y%m%d\"), \".parquet\")\n    }\n    \n    urls &lt;- c(urls, url)\n    current_dt &lt;- current_dt + delta\n  }\n  \n  return(urls)\n}\n\ndownload_files &lt;- function(urls, save_folder) {\n  # Downloads files from the generated URLs and saves them in the specified folder.\n  # Skips files that already exist.\n  #\n  # Args:\n  #   urls (character vector): List of URLs to download.\n  #   save_folder (character): Folder to save downloaded files.\n  \n  if (!dir_exists(save_folder)) {\n    dir_create(save_folder)\n  }\n  \n  for (url in urls) {\n    file_name &lt;- basename(url)\n    save_path &lt;- file.path(save_folder, file_name)\n    \n    if (file_exists(save_path)) {\n      message(\"Skipping \", file_name, \", already exists.\")\n      next\n    }\n    \n    message(\"Downloading \", url, \"...\")\n    \n    tryCatch({\n      response &lt;- GET(url, write_disk(save_path, overwrite = TRUE))\n      \n      if (http_error(response)) {\n        warning(\"Failed to download \", url, \": HTTP error \", status_code(response))\n      } else {\n        message(\"Saved to \", save_path)\n      }\n      \n    }, error = function(e) {\n      warning(\"Failed to download \", url, \": \", e$message)\n    })\n  }\n}\n\n# Example usage\ndatasets &lt;- list(\n  #\"flight_list\" = c(\"202201\", \"202412\"),\n  \"flight_events\" = c(\"20220101\", \"20241231\")#,\n  #\"measurements\" = c(\"20220101\", \"20241231\")\n)\n\nfor (data_type in names(datasets)) {\n  dates &lt;- datasets[[data_type]]\n  urls &lt;- generate_urls(data_type, dates[1], dates[2])\n  download_files(urls, paste0(\"./data/\", data_type))\n}"
  },
  {
    "objectID": "flight-event-data.html#download-available-datasets",
    "href": "flight-event-data.html#download-available-datasets",
    "title": "Download Flight Events v0.0.2 Datasets",
    "section": "Download Available Datasets",
    "text": "Download Available Datasets\nEach dataset corresponds to a specific 10-day period and is listed below for easy access.\n\nJanuary 01, 2022 - January 11, 2022\nDownload flight_events_20220101_20220111.parquet\nJanuary 11, 2022 - January 21, 2022\nDownload flight_events_20220111_20220121.parquet\nJanuary 21, 2022 - January 31, 2022\nDownload flight_events_20220121_20220131.parquet\nJanuary 31, 2022 - February 10, 2022\nDownload flight_events_20220131_20220210.parquet\nFebruary 10, 2022 - February 20, 2022\nDownload flight_events_20220210_20220220.parquet\nFebruary 20, 2022 - March 02, 2022\nDownload flight_events_20220220_20220302.parquet\nMarch 02, 2022 - March 12, 2022\nDownload flight_events_20220302_20220312.parquet\nMarch 12, 2022 - March 22, 2022\nDownload flight_events_20220312_20220322.parquet\nMarch 22, 2022 - April 01, 2022\nDownload flight_events_20220322_20220401.parquet\nApril 01, 2022 - April 11, 2022\nDownload flight_events_20220401_20220411.parquet\nApril 11, 2022 - April 21, 2022\nDownload flight_events_20220411_20220421.parquet\nApril 21, 2022 - May 01, 2022\nDownload flight_events_20220421_20220501.parquet\nMay 01, 2022 - May 11, 2022\nDownload flight_events_20220501_20220511.parquet\nMay 11, 2022 - May 21, 2022\nDownload flight_events_20220511_20220521.parquet\nMay 21, 2022 - May 31, 2022\nDownload flight_events_20220521_20220531.parquet\nMay 31, 2022 - June 10, 2022\nDownload flight_events_20220531_20220610.parquet\nJune 10, 2022 - June 20, 2022\nDownload flight_events_20220610_20220620.parquet\nJune 20, 2022 - June 30, 2022\nDownload flight_events_20220620_20220630.parquet\nJune 30, 2022 - July 10, 2022\nDownload flight_events_20220630_20220710.parquet\nJuly 10, 2022 - July 20, 2022\nDownload flight_events_20220710_20220720.parquet\nJuly 20, 2022 - July 30, 2022\nDownload flight_events_20220720_20220730.parquet\nJuly 30, 2022 - August 09, 2022\nDownload flight_events_20220730_20220809.parquet\nAugust 09, 2022 - August 19, 2022\nDownload flight_events_20220809_20220819.parquet\nAugust 19, 2022 - August 29, 2022\nDownload flight_events_20220819_20220829.parquet\nAugust 29, 2022 - September 08, 2022\nDownload flight_events_20220829_20220908.parquet\nSeptember 08, 2022 - September 18, 2022\nDownload flight_events_20220908_20220918.parquet\nSeptember 18, 2022 - September 28, 2022\nDownload flight_events_20220918_20220928.parquet\nSeptember 28, 2022 - October 08, 2022\nDownload flight_events_20220928_20221008.parquet\nOctober 08, 2022 - October 18, 2022\nDownload flight_events_20221008_20221018.parquet\nOctober 18, 2022 - October 28, 2022\nDownload flight_events_20221018_20221028.parquet\nOctober 28, 2022 - November 07, 2022\nDownload flight_events_20221028_20221107.parquet\nNovember 07, 2022 - November 17, 2022\nDownload flight_events_20221107_20221117.parquet\nNovember 17, 2022 - November 27, 2022\nDownload flight_events_20221117_20221127.parquet\nNovember 27, 2022 - December 07, 2022\nDownload flight_events_20221127_20221207.parquet\nDecember 07, 2022 - December 17, 2022\nDownload flight_events_20221207_20221217.parquet\nDecember 17, 2022 - December 27, 2022\nDownload flight_events_20221217_20221227.parquet\nDecember 27, 2022 - January 06, 2023\nDownload flight_events_20221227_20230106.parquet\nJanuary 06, 2023 - January 16, 2023\nDownload flight_events_20230106_20230116.parquet\nJanuary 16, 2023 - January 26, 2023\nDownload flight_events_20230116_20230126.parquet\nJanuary 26, 2023 - February 05, 2023\nDownload flight_events_20230126_20230205.parquet\nFebruary 05, 2023 - February 15, 2023\nDownload flight_events_20230205_20230215.parquet\nFebruary 15, 2023 - February 25, 2023\nDownload flight_events_20230215_20230225.parquet\nFebruary 25, 2023 - March 07, 2023\nDownload flight_events_20230225_20230307.parquet\nMarch 07, 2023 - March 17, 2023\nDownload flight_events_20230307_20230317.parquet\nMarch 17, 2023 - March 27, 2023\nDownload flight_events_20230317_20230327.parquet\nMarch 27, 2023 - April 06, 2023\nDownload flight_events_20230327_20230406.parquet\nApril 06, 2023 - April 16, 2023\nDownload flight_events_20230406_20230416.parquet\nApril 16, 2023 - April 26, 2023\nDownload flight_events_20230416_20230426.parquet\nApril 26, 2023 - May 06, 2023\nDownload flight_events_20230426_20230506.parquet\nMay 06, 2023 - May 16, 2023\nDownload flight_events_20230506_20230516.parquet\nMay 16, 2023 - May 26, 2023\nDownload flight_events_20230516_20230526.parquet\nMay 26, 2023 - June 05, 2023\nDownload flight_events_20230526_20230605.parquet\nJune 05, 2023 - June 15, 2023\nDownload flight_events_20230605_20230615.parquet\nJune 15, 2023 - June 25, 2023\nDownload flight_events_20230615_20230625.parquet\nJune 25, 2023 - July 05, 2023\nDownload flight_events_20230625_20230705.parquet\nJuly 05, 2023 - July 15, 2023\nDownload flight_events_20230705_20230715.parquet\nJuly 15, 2023 - July 25, 2023\nDownload flight_events_20230715_20230725.parquet\nJuly 25, 2023 - August 04, 2023\nDownload flight_events_20230725_20230804.parquet\nAugust 04, 2023 - August 14, 2023\nDownload flight_events_20230804_20230814.parquet\nAugust 14, 2023 - August 24, 2023\nDownload flight_events_20230814_20230824.parquet\nAugust 24, 2023 - September 03, 2023\nDownload flight_events_20230824_20230903.parquet\nSeptember 03, 2023 - September 13, 2023\nDownload flight_events_20230903_20230913.parquet\nSeptember 13, 2023 - September 23, 2023\nDownload flight_events_20230913_20230923.parquet\nSeptember 23, 2023 - October 03, 2023\nDownload flight_events_20230923_20231003.parquet\nOctober 03, 2023 - October 13, 2023\nDownload flight_events_20231003_20231013.parquet\nOctober 13, 2023 - October 23, 2023\nDownload flight_events_20231013_20231023.parquet\nOctober 23, 2023 - November 02, 2023\nDownload flight_events_20231023_20231102.parquet\nNovember 02, 2023 - November 12, 2023\nDownload flight_events_20231102_20231112.parquet\nNovember 12, 2023 - November 22, 2023\nDownload flight_events_20231112_20231122.parquet\nNovember 22, 2023 - December 02, 2023\nDownload flight_events_20231122_20231202.parquet\nDecember 02, 2023 - December 12, 2023\nDownload flight_events_20231202_20231212.parquet\nDecember 12, 2023 - December 22, 2023\nDownload flight_events_20231212_20231222.parquet\nDecember 22, 2023 - January 01, 2024\nDownload flight_events_20231222_20240101.parquet\nJanuary 01, 2024 - January 11, 2024\nDownload flight_events_20240101_20240111.parquet\nJanuary 11, 2024 - January 21, 2024\nDownload flight_events_20240111_20240121.parquet\nJanuary 21, 2024 - January 31, 2024\nDownload flight_events_20240121_20240131.parquet\nJanuary 31, 2024 - February 10, 2024\nDownload flight_events_20240131_20240210.parquet\nFebruary 10, 2024 - February 20, 2024\nDownload flight_events_20240210_20240220.parquet\nFebruary 20, 2024 - March 01, 2024\nDownload flight_events_20240220_20240301.parquet\nMarch 01, 2024 - March 11, 2024\nDownload flight_events_20240301_20240311.parquet\nMarch 11, 2024 - March 21, 2024\nDownload flight_events_20240311_20240321.parquet\nMarch 21, 2024 - March 31, 2024\nDownload flight_events_20240321_20240331.parquet\nMarch 31, 2024 - April 10, 2024\nDownload flight_events_20240331_20240410.parquet\nApril 10, 2024 - April 20, 2024\nDownload flight_events_20240410_20240420.parquet\nApril 20, 2024 - April 30, 2024\nDownload flight_events_20240420_20240430.parquet\nApril 30, 2024 - May 10, 2024\nDownload flight_events_20240430_20240510.parquet\nMay 10, 2024 - May 20, 2024\nDownload flight_events_20240510_20240520.parquet\nMay 20, 2024 - May 30, 2024\nDownload flight_events_20240520_20240530.parquet\nMay 30, 2024 - June 09, 2024\nDownload flight_events_20240530_20240609.parquet\nJune 09, 2024 - June 19, 2024\nDownload flight_events_20240609_20240619.parquet\nJune 19, 2024 - June 29, 2024\nDownload flight_events_20240619_20240629.parquet\nJune 29, 2024 - July 09, 2024\nDownload flight_events_20240629_20240709.parquet\nJuly 09, 2024 - July 19, 2024\nDownload flight_events_20240709_20240719.parquet\nJuly 19, 2024 - July 29, 2024\nDownload flight_events_20240719_20240729.parquet\nJuly 29, 2024 - August 08, 2024\nDownload flight_events_20240729_20240808.parquet\nAugust 08, 2024 - August 18, 2024\nDownload flight_events_20240808_20240818.parquet\nAugust 18, 2024 - August 28, 2024\nDownload flight_events_20240818_20240828.parquet\nAugust 28, 2024 - September 07, 2024\nDownload flight_events_20240828_20240907.parquet\nSeptember 07, 2024 - September 17, 2024\nDownload flight_events_20240907_20240917.parquet\nSeptember 17, 2024 - September 27, 2024\nDownload flight_events_20240917_20240927.parquet\nSeptember 27, 2024 - October 07, 2024\nDownload flight_events_20240927_20241007.parquet\nOctober 07, 2024 - October 17, 2024\nDownload flight_events_20241007_20241017.parquet\nOctober 17, 2024 - October 27, 2024\nDownload flight_events_20241017_20241027.parquet\nOctober 27, 2024 - November 06, 2024\nDownload flight_events_20241027_20241106.parquet\nNovember 06, 2024 - November 16, 2024\nDownload flight_events_20241106_20241116.parquet\nNovember 16, 2024 - November 26, 2024\nDownload flight_events_20241116_20241126.parquet\nNovember 26, 2024 - December 06, 2024\nDownload flight_events_20241126_20241206.parquet\nDecember 06, 2024 - December 16, 2024\nDownload flight_events_20241206_20241216.parquet\nDecember 16, 2024 - December 26, 2024\nDownload flight_events_20241216_20241226.parquet\nDecember 26, 2024 - January 05, 2025\nDownload flight_events_20241226_20250105.parquet\nJanuary 05, 2025 - January 15, 2025\nDownload flight_events_20250105_20250115.parquet\nJanuary 15, 2025 - January 25, 2025\nDownload flight_events_20250115_20250125.parquet\nJanuary 25, 2025 - February 04, 2025\nDownload flight_events_20250125_20250204.parquet\nFebruary 04, 2025 - February 14, 2025\nDownload flight_events_20250204_20250214.parquet\nFebruary 14, 2025 - February 24, 2025\nDownload flight_events_20250214_20250224.parquet\nFebruary 24, 2025 - March 06, 2025\nDownload flight_events_20250224_20250306.parquet\nMarch 06, 2025 - March 16, 2025\nDownload flight_events_20250306_20250316.parquet\nMarch 16, 2025 - March 26, 2025\nDownload flight_events_20250316_20250326.parquet\nMarch 26, 2025 - April 05, 2025\nDownload flight_events_20250326_20250405.parquet\nApril 05, 2025 - April 15, 2025\nDownload flight_events_20250405_20250415.parquet\nApril 15, 2025 - April 25, 2025\nDownload flight_events_20250415_20250425.parquet\nApril 25, 2025 - May 05, 2025\nDownload flight_events_20250425_20250505.parquet\n\n\nWe hope you find these datasets useful for your analysis and research. If you have any questions or require further assistance, please contact us at support@ansperformance.eu."
  },
  {
    "objectID": "measurement-data.html#automated-download",
    "href": "measurement-data.html#automated-download",
    "title": "Download Measurements v0.0.2 Datasets",
    "section": "Automated Download",
    "text": "Automated Download\nIf you want to automate your downloads, you can generate the link for downloading using the following format where YYYYMMDD is the start date of the 10-day period. Note that the first date to start generating intervals for is January 01, 2022.\nhttps://www.eurocontrol.int/performance/data/download/OPDI/v002/measurements/measurements_{YYYYMMDD}_{YYYYMMDD_next10}.parquet\n\n\n\n\n\n\nPython download script example\n\n\n\n\n\n\nimport os\nimport requests\nfrom datetime import datetime, timedelta\nfrom dateutil.relativedelta import relativedelta\n\ndef generate_urls(data_type: str, start_date: str, end_date: str) -&gt; list:\n    \"\"\"\n    Generate a list of URLs for flight lists, flight events, or measurements.\n\n    Args:\n        data_type (str): Type of data (\"flight_list\", \"flight_events\", \"measurements\").\n        start_date (str): The start date in the format YYYYMM or YYYYMMDD.\n        end_date (str): The end date in the format YYYYMM or YYYYMMDD.\n\n    Returns:\n        list: List of generated URLs.\n    \"\"\"\n    base_url = f\"https://www.eurocontrol.int/performance/data/download/OPDI/v002/{data_type}/{data_type}_\"\n\n    urls = []\n    \n    if data_type == \"flight_list\":  # Monthly intervals\n        start_dt = datetime.strptime(start_date, \"%Y%m\")\n        end_dt = datetime.strptime(end_date, \"%Y%m\")\n        delta = relativedelta(months=1)\n    else:  # Flight events & Measurements: 10-day intervals\n        start_dt = datetime.strptime(start_date, \"%Y%m%d\")\n        end_dt = datetime.strptime(end_date, \"%Y%m%d\")\n        delta = timedelta(days=10)\n\n    current_dt = start_dt\n    while current_dt &lt;= end_dt:\n        if data_type == \"flight_list\":\n            url = f\"{base_url}{current_dt.strftime('%Y%m')}.parquet\"\n        else:\n            next_dt = current_dt + delta\n            url = f\"{base_url}{current_dt.strftime('%Y%m%d')}_{next_dt.strftime('%Y%m%d')}.parquet\"\n        \n        urls.append(url)\n        current_dt += delta\n\n    return urls\n\ndef download_files(urls: list, save_folder: str):\n    \"\"\"\n    Download files from the generated URLs and save them in the specified folder.\n\n    Args:\n        urls (list): List of URLs to download.\n        save_folder (str): Folder to save downloaded files.\n    \"\"\"\n    os.makedirs(save_folder, exist_ok=True)\n\n    for url in urls:\n        file_name = url.split(\"/\")[-1]\n        save_path = os.path.join(save_folder, file_name)\n\n        if os.path.exists(save_path):\n            print(f\"Skipping {file_name}, already exists.\")\n            continue\n\n        print(f\"Downloading {url}...\")\n\n        try:\n            response = requests.get(url, stream=True)\n            response.raise_for_status()\n\n            with open(save_path, \"wb\") as file:\n                for chunk in response.iter_content(chunk_size=1024):\n                    file.write(chunk)\n\n            print(f\"Saved to {save_path}\")\n\n        except requests.exceptions.RequestException as e:\n            print(f\"Failed to download {url}: {e}\")\n\nif __name__ == \"__main__\":\n    datasets = {\n        #\"flight_list\": (\"202201\", \"202412\"),\n        #\"flight_events\": (\"20220101\", \"20241231\")#,\n        \"measurements\": (\"20220101\", \"20241231\")\n    }\n\n    for data_type, (start_date, end_date) in datasets.items():\n        urls = generate_urls(data_type, start_date, end_date)\n        download_files(urls, f\"./data/{data_type}\")\n\n\n\n\n\n\n\n\n\n\nR download script example\n\n\n\n\n\n\nlibrary(httr)\nlibrary(lubridate)\nlibrary(fs)\n\ngenerate_urls &lt;- function(data_type, start_date, end_date) {\n  # Generates a list of URLs for flight lists, flight events, or measurements.\n  #\n  # Args:\n  #   data_type (character): Type of data (\"flight_list\", \"flight_events\", \"measurements\").\n  #   start_date (character): The start date in format YYYYMM or YYYYMMDD.\n  #   end_date (character): The end date in format YYYYMM or YYYYMMDD.\n  #\n  # Returns:\n  #   A vector of URLs.\n  \n  base_url &lt;- paste0(\"https://www.eurocontrol.int/performance/data/download/OPDI/v002/\", data_type, \"/\", data_type, \"_\")\n  urls &lt;- c()\n  \n  if (data_type == \"flight_list\") {\n    start_dt &lt;- ymd(paste0(start_date, \"01\"))\n    end_dt &lt;- ymd(paste0(end_date, \"01\"))\n    delta &lt;- months(1)\n  } else {\n    start_dt &lt;- ymd(start_date)\n    end_dt &lt;- ymd(end_date)\n    delta &lt;- days(10)\n  }\n  \n  current_dt &lt;- start_dt\n  while (current_dt &lt;= end_dt) {\n    if (data_type == \"flight_list\") {\n      url &lt;- paste0(base_url, format(current_dt, \"%Y%m\"), \".parquet\")\n    } else {\n      next_dt &lt;- current_dt + delta\n      url &lt;- paste0(base_url, format(current_dt, \"%Y%m%d\"), \"_\", format(next_dt, \"%Y%m%d\"), \".parquet\")\n    }\n    \n    urls &lt;- c(urls, url)\n    current_dt &lt;- current_dt + delta\n  }\n  \n  return(urls)\n}\n\ndownload_files &lt;- function(urls, save_folder) {\n  # Downloads files from the generated URLs and saves them in the specified folder.\n  # Skips files that already exist.\n  #\n  # Args:\n  #   urls (character vector): List of URLs to download.\n  #   save_folder (character): Folder to save downloaded files.\n  \n  if (!dir_exists(save_folder)) {\n    dir_create(save_folder)\n  }\n  \n  for (url in urls) {\n    file_name &lt;- basename(url)\n    save_path &lt;- file.path(save_folder, file_name)\n    \n    if (file_exists(save_path)) {\n      message(\"Skipping \", file_name, \", already exists.\")\n      next\n    }\n    \n    message(\"Downloading \", url, \"...\")\n    \n    tryCatch({\n      response &lt;- GET(url, write_disk(save_path, overwrite = TRUE))\n      \n      if (http_error(response)) {\n        warning(\"Failed to download \", url, \": HTTP error \", status_code(response))\n      } else {\n        message(\"Saved to \", save_path)\n      }\n      \n    }, error = function(e) {\n      warning(\"Failed to download \", url, \": \", e$message)\n    })\n  }\n}\n\n# Example usage\ndatasets &lt;- list(\n  #\"flight_list\" = c(\"202201\", \"202412\"),\n  #\"flight_events\" = c(\"20220101\", \"20241231\")#,\n  \"measurements\" = c(\"20220101\", \"20241231\")\n)\n\nfor (data_type in names(datasets)) {\n  dates &lt;- datasets[[data_type]]\n  urls &lt;- generate_urls(data_type, dates[1], dates[2])\n  download_files(urls, paste0(\"./data/\", data_type))\n}"
  },
  {
    "objectID": "measurement-data.html#download-available-datasets",
    "href": "measurement-data.html#download-available-datasets",
    "title": "Download Measurements v0.0.2 Datasets",
    "section": "Download Available Datasets",
    "text": "Download Available Datasets\nEach dataset corresponds to a specific 10-day period and is listed below for easy access.\n\nJanuary 01, 2022 - January 11, 2022\nDownload measurements_20220101_20220111.parquet\nJanuary 11, 2022 - January 21, 2022\nDownload measurements_20220111_20220121.parquet\nJanuary 21, 2022 - January 31, 2022\nDownload measurements_20220121_20220131.parquet\nJanuary 31, 2022 - February 10, 2022\nDownload measurements_20220131_20220210.parquet\nFebruary 10, 2022 - February 20, 2022\nDownload measurements_20220210_20220220.parquet\nFebruary 20, 2022 - March 02, 2022\nDownload measurements_20220220_20220302.parquet\nMarch 02, 2022 - March 12, 2022\nDownload measurements_20220302_20220312.parquet\nMarch 12, 2022 - March 22, 2022\nDownload measurements_20220312_20220322.parquet\nMarch 22, 2022 - April 01, 2022\nDownload measurements_20220322_20220401.parquet\nApril 01, 2022 - April 11, 2022\nDownload measurements_20220401_20220411.parquet\nApril 11, 2022 - April 21, 2022\nDownload measurements_20220411_20220421.parquet\nApril 21, 2022 - May 01, 2022\nDownload measurements_20220421_20220501.parquet\nMay 01, 2022 - May 11, 2022\nDownload measurements_20220501_20220511.parquet\nMay 11, 2022 - May 21, 2022\nDownload measurements_20220511_20220521.parquet\nMay 21, 2022 - May 31, 2022\nDownload measurements_20220521_20220531.parquet\nMay 31, 2022 - June 10, 2022\nDownload measurements_20220531_20220610.parquet\nJune 10, 2022 - June 20, 2022\nDownload measurements_20220610_20220620.parquet\nJune 20, 2022 - June 30, 2022\nDownload measurements_20220620_20220630.parquet\nJune 30, 2022 - July 10, 2022\nDownload measurements_20220630_20220710.parquet\nJuly 10, 2022 - July 20, 2022\nDownload measurements_20220710_20220720.parquet\nJuly 20, 2022 - July 30, 2022\nDownload measurements_20220720_20220730.parquet\nJuly 30, 2022 - August 09, 2022\nDownload measurements_20220730_20220809.parquet\nAugust 09, 2022 - August 19, 2022\nDownload measurements_20220809_20220819.parquet\nAugust 19, 2022 - August 29, 2022\nDownload measurements_20220819_20220829.parquet\nAugust 29, 2022 - September 08, 2022\nDownload measurements_20220829_20220908.parquet\nSeptember 08, 2022 - September 18, 2022\nDownload measurements_20220908_20220918.parquet\nSeptember 18, 2022 - September 28, 2022\nDownload measurements_20220918_20220928.parquet\nSeptember 28, 2022 - October 08, 2022\nDownload measurements_20220928_20221008.parquet\nOctober 08, 2022 - October 18, 2022\nDownload measurements_20221008_20221018.parquet\nOctober 18, 2022 - October 28, 2022\nDownload measurements_20221018_20221028.parquet\nOctober 28, 2022 - November 07, 2022\nDownload measurements_20221028_20221107.parquet\nNovember 07, 2022 - November 17, 2022\nDownload measurements_20221107_20221117.parquet\nNovember 17, 2022 - November 27, 2022\nDownload measurements_20221117_20221127.parquet\nNovember 27, 2022 - December 07, 2022\nDownload measurements_20221127_20221207.parquet\nDecember 07, 2022 - December 17, 2022\nDownload measurements_20221207_20221217.parquet\nDecember 17, 2022 - December 27, 2022\nDownload measurements_20221217_20221227.parquet\nDecember 27, 2022 - January 06, 2023\nDownload measurements_20221227_20230106.parquet\nJanuary 06, 2023 - January 16, 2023\nDownload measurements_20230106_20230116.parquet\nJanuary 16, 2023 - January 26, 2023\nDownload measurements_20230116_20230126.parquet\nJanuary 26, 2023 - February 05, 2023\nDownload measurements_20230126_20230205.parquet\nFebruary 05, 2023 - February 15, 2023\nDownload measurements_20230205_20230215.parquet\nFebruary 15, 2023 - February 25, 2023\nDownload measurements_20230215_20230225.parquet\nFebruary 25, 2023 - March 07, 2023\nDownload measurements_20230225_20230307.parquet\nMarch 07, 2023 - March 17, 2023\nDownload measurements_20230307_20230317.parquet\nMarch 17, 2023 - March 27, 2023\nDownload measurements_20230317_20230327.parquet\nMarch 27, 2023 - April 06, 2023\nDownload measurements_20230327_20230406.parquet\nApril 06, 2023 - April 16, 2023\nDownload measurements_20230406_20230416.parquet\nApril 16, 2023 - April 26, 2023\nDownload measurements_20230416_20230426.parquet\nApril 26, 2023 - May 06, 2023\nDownload measurements_20230426_20230506.parquet\nMay 06, 2023 - May 16, 2023\nDownload measurements_20230506_20230516.parquet\nMay 16, 2023 - May 26, 2023\nDownload measurements_20230516_20230526.parquet\nMay 26, 2023 - June 05, 2023\nDownload measurements_20230526_20230605.parquet\nJune 05, 2023 - June 15, 2023\nDownload measurements_20230605_20230615.parquet\nJune 15, 2023 - June 25, 2023\nDownload measurements_20230615_20230625.parquet\nJune 25, 2023 - July 05, 2023\nDownload measurements_20230625_20230705.parquet\nJuly 05, 2023 - July 15, 2023\nDownload measurements_20230705_20230715.parquet\nJuly 15, 2023 - July 25, 2023\nDownload measurements_20230715_20230725.parquet\nJuly 25, 2023 - August 04, 2023\nDownload measurements_20230725_20230804.parquet\nAugust 04, 2023 - August 14, 2023\nDownload measurements_20230804_20230814.parquet\nAugust 14, 2023 - August 24, 2023\nDownload measurements_20230814_20230824.parquet\nAugust 24, 2023 - September 03, 2023\nDownload measurements_20230824_20230903.parquet\nSeptember 03, 2023 - September 13, 2023\nDownload measurements_20230903_20230913.parquet\nSeptember 13, 2023 - September 23, 2023\nDownload measurements_20230913_20230923.parquet\nSeptember 23, 2023 - October 03, 2023\nDownload measurements_20230923_20231003.parquet\nOctober 03, 2023 - October 13, 2023\nDownload measurements_20231003_20231013.parquet\nOctober 13, 2023 - October 23, 2023\nDownload measurements_20231013_20231023.parquet\nOctober 23, 2023 - November 02, 2023\nDownload measurements_20231023_20231102.parquet\nNovember 02, 2023 - November 12, 2023\nDownload measurements_20231102_20231112.parquet\nNovember 12, 2023 - November 22, 2023\nDownload measurements_20231112_20231122.parquet\nNovember 22, 2023 - December 02, 2023\nDownload measurements_20231122_20231202.parquet\nDecember 02, 2023 - December 12, 2023\nDownload measurements_20231202_20231212.parquet\nDecember 12, 2023 - December 22, 2023\nDownload measurements_20231212_20231222.parquet\nDecember 22, 2023 - January 01, 2024\nDownload measurements_20231222_20240101.parquet\nJanuary 01, 2024 - January 11, 2024\nDownload measurements_20240101_20240111.parquet\nJanuary 11, 2024 - January 21, 2024\nDownload measurements_20240111_20240121.parquet\nJanuary 21, 2024 - January 31, 2024\nDownload measurements_20240121_20240131.parquet\nJanuary 31, 2024 - February 10, 2024\nDownload measurements_20240131_20240210.parquet\nFebruary 10, 2024 - February 20, 2024\nDownload measurements_20240210_20240220.parquet\nFebruary 20, 2024 - March 01, 2024\nDownload measurements_20240220_20240301.parquet\nMarch 01, 2024 - March 11, 2024\nDownload measurements_20240301_20240311.parquet\nMarch 11, 2024 - March 21, 2024\nDownload measurements_20240311_20240321.parquet\nMarch 21, 2024 - March 31, 2024\nDownload measurements_20240321_20240331.parquet\nMarch 31, 2024 - April 10, 2024\nDownload measurements_20240331_20240410.parquet\nApril 10, 2024 - April 20, 2024\nDownload measurements_20240410_20240420.parquet\nApril 20, 2024 - April 30, 2024\nDownload measurements_20240420_20240430.parquet\nApril 30, 2024 - May 10, 2024\nDownload measurements_20240430_20240510.parquet\nMay 10, 2024 - May 20, 2024\nDownload measurements_20240510_20240520.parquet\nMay 20, 2024 - May 30, 2024\nDownload measurements_20240520_20240530.parquet\nMay 30, 2024 - June 09, 2024\nDownload measurements_20240530_20240609.parquet\nJune 09, 2024 - June 19, 2024\nDownload measurements_20240609_20240619.parquet\nJune 19, 2024 - June 29, 2024\nDownload measurements_20240619_20240629.parquet\nJune 29, 2024 - July 09, 2024\nDownload measurements_20240629_20240709.parquet\nJuly 09, 2024 - July 19, 2024\nDownload measurements_20240709_20240719.parquet\nJuly 19, 2024 - July 29, 2024\nDownload measurements_20240719_20240729.parquet\nJuly 29, 2024 - August 08, 2024\nDownload measurements_20240729_20240808.parquet\nAugust 08, 2024 - August 18, 2024\nDownload measurements_20240808_20240818.parquet\nAugust 18, 2024 - August 28, 2024\nDownload measurements_20240818_20240828.parquet\nAugust 28, 2024 - September 07, 2024\nDownload measurements_20240828_20240907.parquet\nSeptember 07, 2024 - September 17, 2024\nDownload measurements_20240907_20240917.parquet\nSeptember 17, 2024 - September 27, 2024\nDownload measurements_20240917_20240927.parquet\nSeptember 27, 2024 - October 07, 2024\nDownload measurements_20240927_20241007.parquet\nOctober 07, 2024 - October 17, 2024\nDownload measurements_20241007_20241017.parquet\nOctober 17, 2024 - October 27, 2024\nDownload measurements_20241017_20241027.parquet\nOctober 27, 2024 - November 06, 2024\nDownload measurements_20241027_20241106.parquet\nNovember 06, 2024 - November 16, 2024\nDownload measurements_20241106_20241116.parquet\nNovember 16, 2024 - November 26, 2024\nDownload measurements_20241116_20241126.parquet\nNovember 26, 2024 - December 06, 2024\nDownload measurements_20241126_20241206.parquet\nDecember 06, 2024 - December 16, 2024\nDownload measurements_20241206_20241216.parquet\nDecember 16, 2024 - December 26, 2024\nDownload measurements_20241216_20241226.parquet\nDecember 26, 2024 - January 05, 2025\nDownload measurements_20241226_20250105.parquet\nJanuary 05, 2025 - January 15, 2025\nDownload measurements_20250105_20250115.parquet\nJanuary 15, 2025 - January 25, 2025\nDownload measurements_20250115_20250125.parquet\nJanuary 25, 2025 - February 04, 2025\nDownload measurements_20250125_20250204.parquet\nFebruary 04, 2025 - February 14, 2025\nDownload measurements_20250204_20250214.parquet\nFebruary 14, 2025 - February 24, 2025\nDownload measurements_20250214_20250224.parquet\nFebruary 24, 2025 - March 06, 2025\nDownload measurements_20250224_20250306.parquet\nMarch 06, 2025 - March 16, 2025\nDownload measurements_20250306_20250316.parquet\nMarch 16, 2025 - March 26, 2025\nDownload measurements_20250316_20250326.parquet\nMarch 26, 2025 - April 05, 2025\nDownload measurements_20250326_20250405.parquet\nApril 05, 2025 - April 15, 2025\nDownload measurements_20250405_20250415.parquet\nApril 15, 2025 - April 25, 2025\nDownload measurements_20250415_20250425.parquet\nApril 25, 2025 - May 05, 2025\nDownload measurements_20250425_20250505.parquet`\n\n\nWe hope you find these datasets useful for your analysis and research. If you have any questions or require further assistance, please contact us at support@ansperformance.eu."
  },
  {
    "objectID": "flight-list-data.html#automated-download",
    "href": "flight-list-data.html#automated-download",
    "title": "Download Flight List v0.0.2 Datasets",
    "section": "Automated Download",
    "text": "Automated Download\nIf you want to automate your downloads, you can generate the link for downloading using the following format where YYYYMM is the year and month of interest.\nhttps://www.eurocontrol.int/performance/data/download/OPDI/v002/flight_list/flight_list_{YYYYMM}.parquet\n\n\n\n\n\n\nPython download script example\n\n\n\n\n\n\nimport os\nimport requests\nfrom datetime import datetime, timedelta\nfrom dateutil.relativedelta import relativedelta\n\ndef generate_urls(data_type: str, start_date: str, end_date: str) -&gt; list:\n    \"\"\"\n    Generate a list of URLs for flight lists, flight events, or measurements.\n\n    Args:\n        data_type (str): Type of data (\"flight_list\", \"flight_events\", \"measurements\").\n        start_date (str): The start date in the format YYYYMM or YYYYMMDD.\n        end_date (str): The end date in the format YYYYMM or YYYYMMDD.\n\n    Returns:\n        list: List of generated URLs.\n    \"\"\"\n    base_url = f\"https://www.eurocontrol.int/performance/data/download/OPDI/v002/{data_type}/{data_type}_\"\n\n    urls = []\n    \n    if data_type == \"flight_list\":\n        start_dt = datetime.strptime(start_date, \"%Y%m\")\n        end_dt = datetime.strptime(end_date, \"%Y%m\")\n        delta = relativedelta(months=1)\n    \n    current_dt = start_dt\n    while current_dt &lt;= end_dt:\n        url = f\"{base_url}{current_dt.strftime('%Y%m')}.parquet\"\n        urls.append(url)\n        current_dt += delta\n\n    return urls\n\ndef download_files(urls: list, save_folder: str):\n    \"\"\"\n    Download files from the generated URLs and save them in the specified folder.\n\n    Args:\n        urls (list): List of URLs to download.\n        save_folder (str): Folder to save downloaded files.\n    \"\"\"\n    os.makedirs(save_folder, exist_ok=True)\n\n    for url in urls:\n        file_name = url.split(\"/\")[-1]\n        save_path = os.path.join(save_folder, file_name)\n\n        if os.path.exists(save_path):\n            print(f\"Skipping {file_name}, already exists.\")\n            continue\n\n        print(f\"Downloading {url}...\")\n\n        try:\n            response = requests.get(url, stream=True)\n            response.raise_for_status()\n\n            with open(save_path, \"wb\") as file:\n                for chunk in response.iter_content(chunk_size=1024):\n                    file.write(chunk)\n\n            print(f\"Saved to {save_path}\")\n\n        except requests.exceptions.RequestException as e:\n            print(f\"Failed to download {url}: {e}\")\n\nif __name__ == \"__main__\":\n    datasets = {\n        \"flight_list\": (\"202201\", \"202411\")\n    }\n\n    for data_type, (start_date, end_date) in datasets.items():\n        urls = generate_urls(data_type, start_date, end_date)\n        download_files(urls, f\"./data/{data_type}\")\n\n\n\n\n\n\n\n\n\n\nR download script example\n\n\n\n\n\n\nlibrary(httr)\nlibrary(lubridate)\nlibrary(fs)\n\ngenerate_urls &lt;- function(data_type, start_date, end_date) {\n  base_url &lt;- paste0(\"https://www.eurocontrol.int/performance/data/download/OPDI/v002/\", data_type, \"/\", data_type, \"_\")\n  urls &lt;- c()\n  \n  start_dt &lt;- ymd(paste0(start_date, \"01\"))\n  end_dt &lt;- ymd(paste0(end_date, \"01\"))\n  delta &lt;- months(1)\n\n  current_dt &lt;- start_dt\n  while (current_dt &lt;= end_dt) {\n    url &lt;- paste0(base_url, format(current_dt, \"%Y%m\"), \".parquet\")\n    urls &lt;- c(urls, url)\n    current_dt &lt;- current_dt + delta\n  }\n\n  return(urls)\n}\n\ndownload_files &lt;- function(urls, save_folder) {\n  if (!dir_exists(save_folder)) {\n    dir_create(save_folder)\n  }\n\n  for (url in urls) {\n    file_name &lt;- basename(url)\n    save_path &lt;- file.path(save_folder, file_name)\n\n    if (file_exists(save_path)) {\n      message(\"Skipping \", file_name, \", already exists.\")\n      next\n    }\n\n    message(\"Downloading \", url, \"...\")\n\n    tryCatch({\n      response &lt;- GET(url, write_disk(save_path, overwrite = TRUE))\n\n      if (http_error(response)) {\n        warning(\"Failed to download \", url, \": HTTP error \", status_code(response))\n      } else {\n        message(\"Saved to \", save_path)\n      }\n\n    }, error = function(e) {\n      warning(\"Failed to download \", url, \": \", e$message)\n    })\n  }\n}\n\n# Example usage\nurls &lt;- generate_urls(\"flight_list\", \"202201\", \"202411\")\ndownload_files(urls, \"./data/flight_list\")"
  },
  {
    "objectID": "flight-list-data.html#download-available-datasets",
    "href": "flight-list-data.html#download-available-datasets",
    "title": "Download Flight List v0.0.2 Datasets",
    "section": "Download Available Datasets",
    "text": "Download Available Datasets\nEach dataset corresponds to a specific month and year, listed below for easy access.\n\nJanuary 2022\nDownload flight_list_202201.parquet\nFebruary 2022\nDownload flight_list_202202.parquet\nMarch 2022\nDownload flight_list_202203.parquet\nApril 2022\nDownload flight_list_202204.parquet\nMay 2022\nDownload flight_list_202205.parquet\nJune 2022\nDownload flight_list_202206.parquet\nJuly 2022\nDownload flight_list_202207.parquet\nAugust 2022\nDownload flight_list_202208.parquet\nSeptember 2022\nDownload flight_list_202209.parquet\nOctober 2022\nDownload flight_list_202210.parquet\nNovember 2022\nDownload flight_list_202211.parquet\nDecember 2022\nDownload flight_list_202212.parquet\nJanuary 2023\nDownload flight_list_202301.parquet\nFebruary 2023\nDownload flight_list_202302.parquet\nMarch 2023\nDownload flight_list_202303.parquet\nApril 2023\nDownload flight_list_202304.parquet\nMay 2023\nDownload flight_list_202305.parquet\nJune 2023\nDownload flight_list_202306.parquet\nJuly 2023\nDownload flight_list_202307.parquet\nAugust 2023\nDownload flight_list_202308.parquet\nSeptember 2023\nDownload flight_list_202309.parquet\nOctober 2023\nDownload flight_list_202310.parquet\nNovember 2023\nDownload flight_list_202311.parquet\nDecember 2023\nDownload flight_list_202312.parquet\nJanuary 2024\nDownload flight_list_202401.parquet\nFebruary 2024\nDownload flight_list_202402.parquet\nMarch 2024\nDownload flight_list_202403.parquet\nApril 2024\nDownload flight_list_202404.parquet\nMay 2024\nDownload flight_list_202405.parquet\nJune 2024\nDownload flight_list_202406.parquet\nJuly 2024\nDownload flight_list_202407.parquet\nAugust 2024\nDownload flight_list_202408.parquet\nSeptember 2024\nDownload flight_list_202409.parquet\nOctober 2024\nDownload flight_list_202410.parquet\nNovember 2024\nDownload flight_list_202411.parquet\nDecember 2024\nDownload flight_list_202412.parquet\nJanuary 2025\nDownload flight_list_202501.parquet\nFebruary 2025\nDownload flight_list_202502.parquet\nMarch 2025\nDownload flight_list_202503.parquet\nApril 2025\nDownload flight_list_202504.parquet\n\n\nWe hope you find these datasets useful for your analysis and research. If you have any questions or require further assistance, please contact us at support@ansperformance.eu."
  }
]